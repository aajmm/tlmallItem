getTemplate_uiControl21_TJE6Sz: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      onOff:true,\n      open:\"none\"\n    }\n  }\n  logoClick = (e) => {\n   let handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"logoClick\"\n      })\n    }\n  }\n  searchClick = (e) => {\n   let handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"searchClick\"\n      })\n    }\n  }\n  iptChange = (e) => {\n   let handler=this.props.customHandler;\n    let target=e.target;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"iptChange\"\n      })\n    }\n  }\n  addrListClick = (e) => {\n   let handler=this.props.customHandler;\n   let target=e.target;\n    this.setState(prevState => ({\n      onOff:!prevState.onOff,\n      open:prevState.onOff ? \"block\" : \"none\"\n    }));\n    if(handler){\n      handler({\n        data:target.selectedIndex,\n        eventType:\"addrListClick\"\n      })\n    }\n  }\n  addressClick = (e) => {\n   let handler=this.props.customHandler;\n    this.setState(prevState => ({\n      onOff:!prevState.onOff,\n      open:prevState.onOff ? \"block\" : \"none\"\n    }));\n    if(handler){\n      handler({\n        eventType:\"addressClick\"\n      })\n    }\n  }\n  maskClick = (e) =>{\n    this.setState(prevState => ({\n      onOff:!prevState.onOff,\n      open:prevState.onOff ? \"block\" : \"none\"\n    })); \n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<div className=\"ysp-index-top\">\n        <div className=\"logo-img\" onClick={me.logoClick.bind(me)}></div>\n        <div className=\"search-box\"><span className=\"search\" onClick={me.searchClick.bind(me)}></span><AInput placeholder={data.place} type=\"text\" value={data.value} onChange={me.iptChange.bind(me)}/></div>\n        <div className=\"address-box\" onClick={me.addressClick.bind(me)}><span className=\"address\"></span>{data.city}</div>\n        <div className=\"address-pop\" style={{display:me.state.open}}>\n          <div className=\"mask\" onClick={me.maskClick.bind(me)}></div>\n          <div className=\"address-con\">\n            <p>请您选择分公司</p>\n            <ul>\n            \t{data.cities.map(function(d,i){\n                return(\n                \t<li data-index={i} onClick={me.addrListClick.bind(me)}>{d}</li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}"
getData_control32_WMwJBg: >-
  if(!elem){
    return;
  }

  let data = {
    city:"",
    place:"",
    value:"",
    isShow:"",
    cities:[]
  };

  data.city = elem.querySelector("#selectedProvince").textContent;

  data.place = elem.querySelector("#defaultKeyword").textContent;

  data.isShow = elem.querySelector("#provinceList").style.display ==
  "inline-block" ? "block":"none";

  data.value = elem.querySelector("#searchBox").value;

  let lists = elem.querySelector("#provinceList").querySelectorAll("option");

  [].map.call(lists,function(d,i){
    data.cities.push(d.textContent);
  });

  return data;
doAction_uiControl21_TJE6Sz: >-
  let type = data.eventType;

  if(type == "addrListClick"){
    let d = data.dataCustom;
  elem.querySelector("#provinceList").querySelectorAll("option")[d].selected =
  true;

  }else if(type == "addressClick"){

  elem.querySelector("#changeProvince").click();

  }else if(type == "logoClick"){

  elem.querySelector(".logo").click();

  }else if(type == "iptChange"){
    let d = data.dataCustom;
  elem.querySelector("#searchBox").value=d;

  }else if(type == "searchClick"){

  elem.querySelector("#searchBtn").click();

  }
getTemplate_uiControl24_tnes6R: "import {Component,Fragment} from 'react'; \nimport '../lib/swiper.min.js';\nimport '../lib/swiper.min.css';\nexport default class extends Component{\ncomponentDidMount(){\n    let swiperElem=document.querySelector(\".ysp-swiper\");\n  if(swiperElem){\n    swiperElem.style.height = swiperElem && swiperElem.offsetWidth * 0.413;\n  }\n}\ncomponentDidUpdate() {\n\tlet mySwiper = new Swiper('.swiper-container', {\n      speed:500,\n      loop:true,\n      autoplay: true,\n      pagination:{\n        el:'.swiper-pagination',\n        clickable:true\n      }\n    });\n}\n\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n        <div className=\"ysp-swiper swiper-container\">\n        <div className=\"swiper-wrapper\">\n          {\n            data.img.map(function(d,i){\n              return(\n              <div className=\"swiper-slide\"><a href={data.url[i]}><img src={data.img[i]} /></a></div>\n              )\n            })\n          }\n        </div>\n        <div className=\"swiper-pagination\"></div>\n</div>\n    )\n  }\n}\n"
getData_control35_ReksFv: |-
  if(!elem){
    return;
  }
  let data = {
    url:[],
    img:[]
  };
  let lists = elem.querySelector("#slideBanners").querySelectorAll("a");
  [].map.call(lists,function(d,i){
    data.img.push(d.getAttribute("data"));
    data.url.push(d.getAttribute("href"));
  });
  return data;
doAction_uiControl24_tnes6R: ''
getTemplate_uiControl25_TLlxuH: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  menuClick = (e) => {\n   let handler=this.props.customHandler;\n    let target=e.target;\n    if(handler){\n      handler({\n        data:target.dataset.index,\n        eventType:\"menuClick\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<ul className=\"ysp-menu\">\n      {data.menus.map(function(d,i){\n          return(\n            <li className={data.names[i]} data-index={i} onClick={me.menuClick.bind(me)}><span className=\"bar\">{d}</span></li>\n          )\n        })\n      }\n      </ul>\n    )\n  }\n}"
getData_control36_1Ht6sa: |-
  if(!elem){
    return;
  }
  let data={
    menus:[],
    names:[]
  };

  let menus = elem.querySelectorAll("li");
  [].map.call(menus,function(d,i){
    if(i!==0){
      data.menus.push(d.textContent);
      data.names.push(d.id);
    }
  })
  return data;
doAction_uiControl25_TLlxuH: |-
  if(data.eventType =="menuClick"){
    let d = parseInt(data.dataCustom) + 1;
    console.log(d);
    elem.querySelectorAll("li")[d].querySelector("a").click();
  }
getTemplate_uiControl26_cLezAI: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  imgClick = (e) => {\n   let handler=this.props.customHandler;\n    let target=e.target;\n    if(handler){\n      handler({\n        data:target.dataset.index,\n        eventType:\"imgClick\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<ul className=\"floor\">\n      {\n        data.map(function(d,i){\n          return(\n          <li className={\"ad\"+d.imgs.length}>\n          {\n          \td.imgs.map(function(m,n){\n              return(\n              <img src={m} data-index={i+\"-\"+n} onClick={me.imgClick.bind(me)}/>\n              )\n            })      \n          }\n          </li>\n          )\n        })  \n      }\n      </ul>\n    )\n  }\n}"
getData_control37_7w0gLr: |-
  if(!elem){
    return;
  }
  let data=[];
  let box1 = elem.querySelectorAll(".ad-box");
  [].map.call(box1,function(d,i){
    let ads = {
      imgs:[],
      links:[]
    };
    let box2 = d.querySelectorAll("a");
    [].map.call(box2,function(m,n){
      ads.imgs.push(m.querySelector("img").getAttribute("data"));
      ads.links.push(m.href);
    });
    data.push(ads);
  });
  return data;
doAction_uiControl26_cLezAI: |-
  if(data.eventType == "imgClick"){
    let Num = data.dataCustom;
    let d = Num.indexOf("-");
    let Num1 = parseInt(Num.substr(0,d));
    let Num2 = parseInt(Num.substr(d+1,Num.length));
    elem.querySelectorAll(".ad-box")[Num1].querySelectorAll("a")[Num2].click();
  }
getTemplate_uiControl27_4hN0rx: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  handlerClick = (e) => {\n   let handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"handlerClick\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me = this;\n    return(\n    \t<div className=\"ysp-footer\">\n        <span className=\"shop-btn\" onClick={me.handlerClick.bind(me)}>营业执照</span>\n        <p>{data[2]}</p>\n        <p>{data[3]}</p>\n      </div>\n    )\n  }\n}"
getData_control38_CQD14f: |-
  if(!elem){
    return;
  }
  let data=[];
  let ps = elem.querySelectorAll("p");
  [].map.call(ps,function(d,i){
    data.push(d.textContent);
  });
  return data;
doAction_uiControl27_4hN0rx: |-
  if(data.eventType == "handlerClick"){
    
  }
getTemplate_uiControl28_zabxcu: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  handlerClick = (e) => {\n   let handler=this.props.customHandler;\n    let target=e.target;\n    if(handler){\n      handler({\n        data:target.selectedIndex,\n        eventType:\"click\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<div></div>\n    )\n  }\n}"
getData_control39_rrtmtm: |-
  if(!elem){
    return;
  }
  let data=[];
  let notice = elem.querySelectorAll(".notice");
  notice 
  return data;
doAction_uiControl28_zabxcu: ''
getTemplate_uiControl28_Byxrut: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  handlerClick = (e) => {\n   let handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"handlerClick\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<div className=\"ysp-footer\">\n        <span className=\"shop-btn\" onClick={me.handlerClick.bind(me)}>营业执照</span>\n        <p>{data[2]}</p>\n        <p>{data[3]}</p>\n      </div>\n    )\n  }\n}"
getData_control39_CVGfUQ: |-
  if(!elem){
    return;
  }
  let data=[];
  let ps = elem.querySelectorAll("p");
  [].map.call(ps,function(d,i){
    data.push(d.textContent);
  });
  return data;
doAction_uiControl28_Byxrut: |-
  if(data.eventType == "handlerClick"){
    elem.querySelector(".tl-footer-lists").querySelectorAll("dl")[5].querySelectorAll("dd")[1].querySelector("a").click();
  }
getTemplate_uiControl29_S4niH0: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  handlerClick = (e) => {\n   let handler=this.props.customHandler;\n    let target=e.target;\n    if(handler){\n      handler({\n        data:target.selectedIndex,\n        eventType:\"click\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<div className=\"ysp-navbar\">\n        <ul>\n          <li><a href=\"\"><span>首页</span></a></li>\n        </ul>\n      </div>\n    )\n  }\n}"
getData_control43_IMz3GE: ''
doAction_uiControl29_S4niH0: ''
getTemplate_uiControl27_E5TPLf: |-
  module.exports = React.createClass({
    render: function() {
      return (
        <div>
          自定义组件用来适配基本组件无法适配的页面元素，您可以通过右键打开该自定义组件编辑器进行编辑
        </div>
      )
    }
  });
getData_control48_5i5oev: |-
  if(!elem){
    return;
  }
  let data=elem.innerHTML;
  //console.log(elem);
  return;
doAction_uiControl27_E5TPLf: console.log(elem);
getTemplate_uiControl33_DEVCih: |-
  module.exports = React.createClass({
    render: function() {
      return (
        <div>
          自定义组件用来适配基本组件无法适配的页面元素，您可以通过右键打开该自定义组件编辑器进行编辑
        </div>
      )
    }
  });
getData_control52_dINODn: |-
  let data=elem.innerHTML;
  return data;
doAction_uiControl33_DEVCih: ''
getTemplate_uiControl33_TDQe7s: |-
  import {Component,Fragment} from 'react'; 
  export default class extends Component{
    handlerClick1(e) {
     let handler=this.props.customHandler;
      if(handler){
        handler({
          eventType:"click1"
        })
      }
    }
    handlerClick2(e) {
     let handler=this.props.customHandler;
      if(handler){
        handler({
          eventType:"click2"
        })
      }
    }
    render(){
      let data = this.props.customData;
      let me=this;
      return(
        <Fragment>
        {data ?
         <div className="ysp-tip-pop">
          <div className="mask"></div>
          <div className="pop-con">
            <p className="tip-con">如需要下单购买，请进一步完善您的资料。</p>
            <div class="tip-btn tip-btn-two"><span className="red-btn" onClick={me.handlerClick1.bind(me)}>完善资料</span><span className="blue-btn" onClick={me.handlerClick2.bind(me)}>下次填写</span></div>
          </div>
        </div>
        : ""
        }
        </Fragment>
      )
    }
  }
getData_control52_d30rnc: |-
  if(!elem){
    return;
  }
  let data="";
  data = elem;
  return data;
doAction_uiControl33_TDQe7s: |-
  if(data.eventType == "click1"){
    let btn = elem.querySelector("input[value='完善资料']").dispatchEvent(new Event("click"));
  }else if(data.eventType == "click2"){
    let btn = elem.querySelector("input[value='下次填写']").dispatchEvent(new Event("click"));
  }
getTemplate_uiControl32_1eDFSP: |-
  import {Component,Fragment} from 'react'; 
  import {CustomNavbar} from 'ysp-custom-components';
  export default class extends Component{
    homeClick = (e) => {
     let handler=this.props.customHandler;
      if(handler){
        handler({
          eventType:"homeClick"
        })
      }
    }
    kindClick = (e) => {
     let handler=this.props.customHandler;
      if(handler){
        handler({
          eventType:"kindClick"
        })
      }
    }
    cartClick = (e) => {
     let handler=this.props.customHandler;
      if(handler){
        handler({
          eventType:"cartClick"
        })
      }
    }
    infoClick = (e) => {
     let handler=this.props.customHandler;
      if(handler){
        handler({
          eventType:"infoClick"
        })
      }
    }
    workClick = (e) => {
     let handler=this.props.customHandler;
      if(handler){
        handler({
          eventType:"workClick"
        })
      }
    }
    render(){
      let data = this.props.customData;
      let me=this;
      return(
        <Fragment>
        {data ?
          <CustomNavbar
            navData={data}
            homeClick={me.homeClick.bind(me)}
            kindClick={me.kindClick.bind(me)}
            cartClick={me.cartClick.bind(me)}
            infoClick={me.infoClick.bind(me)}
            workClick={me.workClick.bind(me)}
          /> : ""
        }
        </Fragment>
        
      )
    }
  }
getData_control45_1HkOGO: |-
  if(!elem){
    return;
  }
  let data=["","","首页"];
  data[0] = elem.querySelector("#miniCartQtyValue").style.display;
  data[1] = elem.querySelector("#miniCartQtyValue").textContent;
  return data;
doAction_uiControl32_1eDFSP: |-
  let type = data.eventType;
  if(type == "homeClick"){
    elem.ownerDocument.defaultView.location.href = ysp.customHelper.indexURL;
  }else if(type == "kindClick"){
    elem.ownerDocument.defaultView.location.href = ysp.customHelper.kindURL;
  }else if(type == "cartClick"){
    elem.ownerDocument.defaultView.location.href = ysp.customHelper.cartURL;
  }else if(type == "infoClick"){
    elem.ownerDocument.defaultView.location.href = ysp.customHelper.infoURL;
  }else if(type == "workClick"){
  elem.ownerDocument.defaultView.location.href = ysp.customHelper.workURL;
  }
