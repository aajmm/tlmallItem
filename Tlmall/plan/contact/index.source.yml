getTemplate_uiControl11_Kri5BV: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  handlerClick(e) {\n   let handler=this.props.customHandler;\n    let target=e.target;\n    if(handler){\n      handler({\n        data:target.selectedIndex,\n        eventType:\"click\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<div className=\"ysp-top\">\n        <span className=\"back\"></span>\n        企业联系人管理\n      </div>\n    )\n  }\n}"
getData_control13_NR1TdQ: ''
doAction_uiControl11_Kri5BV: ''
getTemplate_uiControl12_zTrKDR: |-
  import {Component,Fragment} from 'react'; 
  export default class extends Component{
    handlerClick(e) {
     let handler=this.props.customHandler;
      let target=e.target;
      if(handler){
        handler({
          data:target.selectedIndex,
          eventType:"click"
        })
      }
    }
    render(){
      let data = this.props.customData;
      let me=this;
      return(
        <Fragment>
          <div className="form-box" style={{display:data.onOff}}>
            <div className="form-li"><span>姓名</span><input type="text" value="" /></div>
            <div className="form-li"><span>性别</span><div className="option-show"></div></div>
            <div className="form-li"><span>联系人类型</span><div className="option-show"></div></div>
            <div className="form-li"><span>联系电话</span><input type="text" value="" /></div>
            <div className="form-li"><span>传真</span><input type="text" value="" /></div>
            <div className="form-li"><span>电子邮件</span><input type="text" value="" /></div>
            <div className="form-li"><span>户口性质</span><div className="option-show"></div></div>
            <div className="form-li"><span>生日</span><input type="text" className="sActive" value="" /></div>
            <div className="form-li"><span>教育背景</span><input type="text" value="" /></div>
            <div className="form-li"><span>婚姻状况</span><div className="option-show"></div></div>
            <div className="form-li"><span>职务</span><input type="text" value="" /></div>
            <div className="form-li"><span>部门</span><input type="text" value="" /></div>
            <div className="form-li"><span>备注</span><textarea></textarea></div>
            <div className="save-box"><span>保存</span><span>取消</span></div>
          </div>
          <div className="ysp-selpop-box">
            <div className="pop-mask"></div>
            <div className="pop-con">
              <ul className="sel-lists">
                <li>男</li>
                <li>女</li>
              </ul>
            </div>
          </div>
        </Fragment>
      )
    }
  }
getData_control14_smhkAT: >-
  if(!elem){
    return;
  }

  let data = {
    sexs:[],
    contacts:[],
    residence:[],
    marital:[]
  };

  let sexs = elem.querySelector("#contact_sex").querySelectorAll("option");

  [].map.call(sexs,function(d,i){
    data.sexs.push(d.textContent);
  });

  let contacts =
  elem.querySelector("#contact_contact").querySelectorAll("option");

  [].map.call(contacts,function(d,i){
    data.contacts.push(d.textContent);
  });

  let residence =
  elem.querySelector("#contact_residence").querySelectorAll("option");

  [].map.call(residence,function(d,i){
    data.residence.push(d.textContent);
  });

  let marital =
  elem.querySelector("#contact_marital").querySelectorAll("option");

  [].map.call(marital,function(d,i){
    data.marital.push(d.textContent);
  });

  data.onOff =elem.style.display;

  data.contact_name = elem.querySelector("#contact_name").value;

  data.contact_sex =
  elem.querySelector("#contact_sex").querySelector("option:checked").textContent;

  data.contact_contact =
  elem.querySelector("#contact_contact").querySelector("option:checked").textContent;

  data.contact_contactPhone = elem.querySelector("#contact_contactPhone").value;

  data.contact_fax = elem.querySelector("#contact_fax").value;

  data.contact_email = elem.querySelector("#contact_email").value;

  data.contact_residence =
  elem.querySelector("#contact_residence").querySelector("option:checked").textContent;

  data.contact_birthday = elem.querySelector("#contact_birthday").value;

  data.contact_background = elem.querySelector("#contact_background").value;

  data.contact_marital =
  elem.querySelector("#contact_marital").querySelector("option:checked").textContent;

  data.contact_job = elem.querySelector("#contact_job").value;

  data.contact_department = elem.querySelector("#contact_department").value;

  data.contact_remark = elem.querySelector("#contact_remark").value;


  return data;
doAction_uiControl12_zTrKDR: ''
getTemplate_uiControl15_rVvoFf: "import {Component,Fragment} from 'react'; \nimport {CustomHeader,SelectPop} from 'ysp-custom-components';\n\nexport default class extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            visible:true\n        }\n    }\n  //select模拟点击\n  \t\teditSelSex=(e)=>{\n        let target = e.target;\n        let handler = this.props.customHandler;\n       if (handler) {\n        handler({\n        data:target.dataset.index,\n        eventType: \"editSelSex\"\n        });\n       }\n      }\n      editSelContact=(e)=>{\n        let target = e.target;\n        let handler = this.props.customHandler;\n       if (handler) {\n        handler({\n        data:target.dataset.index,\n        eventType: \"editSelContact\"\n        });\n       }\n      }\n     editSelResidence=(e)=>{\n        let target = e.target;\n        let handler = this.props.customHandler;\n       if (handler) {\n        handler({\n        data:target.dataset.index,\n        eventType: \"editSelResidence\"\n        });\n       }\n      }\n     editSelMarital=(e)=>{\n        let target = e.target;\n        let handler = this.props.customHandler;\n       if (handler) {\n        handler({\n        data:target.dataset.index,\n        eventType: \"editSelMarital\"\n        });\n       }\n      }\n     selSex=(e)=>{\n        let target = e.target;\n        let handler = this.props.customHandler;\n       if (handler) {\n        handler({\n        data:target.dataset.index,\n        eventType: \"selSex\"\n        });\n       }\n      }\n     selContact=(e)=>{\n        let target = e.target;\n        let handler = this.props.customHandler;\n       if (handler) {\n        handler({\n        data:target.dataset.index,\n        eventType: \"selContact\"\n        });\n       }\n      }\n     selResidence=(e)=>{\n        let target = e.target;\n        let handler = this.props.customHandler;\n       if (handler) {\n        handler({\n        data:target.dataset.index,\n        eventType: \"selResidence\"\n        });\n       }\n      }\n     selMarital=(e)=>{\n        let target = e.target;\n        let handler = this.props.customHandler;\n       if (handler) {\n        handler({\n        data:target.dataset.index,\n        eventType: \"selMarital\"\n        });\n       }\n      }\n  //返回\n  back=()=>{ \n   let handler = this.props.customHandler;\n   if (handler) {\n    handler({\n    eventType: 'back'\n    });\n   }\n  }\n  //编辑\n  editbtn=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.dataset.index,\n        eventType:\"editbtn\"\n      })\n    }\n  }\n  //删除\n  editDelete=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.dataset.index,\n        eventType:\"editDelete\"\n      })\n    }\n  }\n  //各输入框事件\n  editName=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:[target.value,target.dataset.index],\n        eventType:\"editName\"\n      })\n    }\n  }\n  editContactPhone=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:[target.value,target.dataset.index],\n        eventType:\"editContactPhone\"\n      })\n    }\n  }\n  editFax=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:[target.value,target.dataset.index],\n        eventType:\"editFax\"\n      })\n    }\n  }\n  editEmail=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:[target.value,target.dataset.index],\n        eventType:\"editEmail\"\n      })\n    }\n  }\n  editBirthday=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:[target.value,target.dataset.index],\n        eventType:\"editBirthday\"\n      })\n    }\n  }\n  editBackground=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:[target.value,target.dataset.index],\n        eventType:\"editBackground\"\n      })\n    }\n  }\n  editJob=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:[target.value,target.dataset.index],\n        eventType:\"editJob\"\n      })\n    }\n  }\n  editDepartment=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:[target.value,target.dataset.index],\n        eventType:\"editDepartment\"\n      })\n    }\n  }\n  editRemark=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:[target.value,target.dataset.index],\n        eventType:\"editRemark\"\n      })\n    }\n  }\n  //保存编辑\n  editSave=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.dataset.index,\n        eventType:\"editSave\"\n      })\n    }\n  }\n  //取消编辑\n  editCancel=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.dataset.index,\n        eventType:\"editCancel\"\n      })\n    }\n  }\n  //新增\n  addBtn=(e)=>{\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"addBtn\"\n      })\n    }\n  }\n  //保存\n  addSave=(e)=>{\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"addSave\"\n      })\n    }\n      setTimeout(function(){\n        thie.setState({\n          visible:false\n        })\n      },1000);\n  }\n  //取消\n  addCancel=(e)=>{\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"addCancel\"\n      })\n    }\n  }\n  addName=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"addName\"\n      })\n    }\n  }\n  addContactPhone=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"addContactPhone\"\n      })\n    }\n  }\n  addFax=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"addFax\"\n      })\n    }\n  }\n  addEmail=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"addEmail\"\n      })\n    }\n  }\n  addBirthday=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"addBirthday\"\n      })\n    }\n  }\n  addBackground=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"addBackground\"\n      })\n    }\n  }\n  addJob=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"addJob\"\n      })\n    }\n  }\n  addDepartment=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"addDepartment\"\n      })\n    }\n  }\n  addRemark=(e)=>{\n    var target = e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"addRemark\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<div className=\"contact\">\n        \t<CustomHeader \n           data={{centerText:\"企业联系人管理\"}} \n           backIsShow={true} \n           filterIsShow={false}\n        \t editIsShow={false}\n           back={me.back.bind(me)}\n        />\n        <h3 className=\"tit\">我的联系人</h3>{\n          \n          data && data.contacts.map(function(d,i){\n            return(\n            \t<div className=\"contact-list\">\n                <div className=\"list-tit\"><div className=\"tit-con\">企业联系人</div><div className=\"btns\"><span onClick={me.editbtn.bind(me)} data-index={i}>编辑</span><span onClick={me.editDelete.bind(me)} data-index={i}>删除</span></div></div>\n                <ul className=\"list-box\">\n                  <li>{d[0]}</li>\n                  <li>{d[6]}</li>\n                  <li>{d[1]}</li>\n                  <li>{d[7]}</li>\n                  <li>{d[2]}</li>\n                  <li>{d[8]}</li>\n                  <li>{d[3]}</li>\n                  <li>{d[9]}</li>\n                  <li>{d[4]}</li>\n                  <li>{d[10]}</li>\n                  <li>{d[5]}</li>\n                  <li>{d[12]}</li>\n                  <li>{d[11]}</li>\n                </ul>\n\t\t\t\t\t\t\t\t<div className=\"form-box\" style={{display:data.edits[i].ifShow1}}>\n                  <div className=\"form-li\"><span>姓名</span><AInput type=\"text\"  data-index={i} value={data.edits[i].name} onBlur={me.editName.bind(me)}/></div>\n                  <div className=\"form-li\"><span>性别</span><SelectPop dataN={i} selChecked={data.edits[i].sex} optionList={data.sexSels} sels={me.editSelSex.bind(me)}/>\n                  </div>\n                  <div className=\"form-li\"><span>联系人类型</span><SelectPop dataN={i} selChecked={data.edits[i].contact} optionList={data.contactSels} sels={me.editSelContact.bind(me)}/>\n                  </div>\n                  <div className=\"form-li\"><span>联系电话</span><AInput type=\"text\" value={data.edits[i].contactPhone} onBlur={me.editContactPhone.bind(me)} data-index={i} /></div>\n                  <div className=\"form-li\"><span>传真</span><AInput type=\"text\" value={data.edits[i].fax} onBlur={me.editFax.bind(me)} data-index={i} /></div>\n                  <div className=\"form-li\"><span>电子邮件</span><AInput type=\"text\" value={data.edits[i].email} onBlur={me.editEmail.bind(me)} data-index={i} /></div>\n                  <div className=\"form-li\"><span>户口性质</span><SelectPop dataN={i} selChecked={data.edits[i].residence} optionList={data.residenceSels} sels={me.editSelResidence.bind(me)}/>\n                  </div>\n                  <div className=\"form-li\"><span>生日</span><AInput type=\"date\" class=\"sActive\" value={data.edits[i].birthday} onChange={me.editBirthday.bind(me)} data-index={i}/></div>\n                  <div className=\"form-li\"><span>教育背景</span><AInput type=\"text\" value={data.edits[i].background} onBlur={me.editBackground.bind(me)} data-index={i}/></div>\n                  <div className=\"form-li\"><span>婚姻状况</span><SelectPop dataN={i} selChecked={data.edits[i].marital} optionList={data.maritalSels} sels={me.editSelMarital.bind(me)}/>\n                  </div>\n                  <div className=\"form-li\"><span>职务</span><AInput type=\"text\" value={data.edits[i].job} onBlur={me.editJob.bind(me)} data-index={i} /></div>\n                  <div className=\"form-li\"><span>部门</span><AInput type=\"text\" value={data.edits[i].department} onBlur={me.editDepartment.bind(me)} data-index={i} /></div>\n                  <div className=\"form-li\"><span>备注</span><ATextarea onBlur={me.editRemark.bind(me)} value={data.edits[i].remark} data-index={i}></ATextarea></div>\n                  <div className=\"save-box\"><span onClick={me.editSave.bind(me)} data-index={i}>保存</span><span onClick={me.editCancel.bind(me)} data-index={i}>取消</span></div>\n                </div>\n              </div>\n            )\n          })\n        }\n        <div className=\"add-contact\" onClick={me.addBtn.bind(me)}><i className=\"icon-add\"></i>新增企业联系人</div>\n          {data ? <div className=\"form-box\" style={{display:data.add.ifShow}}>\n            <div className=\"form-li\"><span>姓名</span><AInput type=\"text\" onBlur={me.addName.bind(me)} value={data.add.name} /></div>\n            <div className=\"form-li\"><span>性别</span><SelectPop selChecked={data.add.sex} optionList={data.sexSels} sels={me.selSex.bind(me)}/>\n            </div>\n            <div className=\"form-li\"><span>联系人类型</span><SelectPop selChecked={data.add.contact} optionList={data.contactSels} sels={me.selContact.bind(me)}/></div>\n            <div className=\"form-li\"><span>联系电话</span><AInput onBlur={me.addContactPhone.bind(me)} type=\"text\" value={data.add.contactPhone} /></div>\n            <div className=\"form-li\"><span>传真</span><AInput onBlur={me.addFax.bind(me)} type=\"text\" value={data.add.fax} /></div>\n            <div className=\"form-li\"><span>电子邮件</span><AInput onBlur={me.addEmail.bind(me)} type=\"text\" value={data.add.email} /></div>\n            <div className=\"form-li\"><span>户口性质</span><SelectPop selChecked={data.add.residence} optionList={data.residenceSels} sels={me.selResidence.bind(me)}/></div>\n            <div className=\"form-li\"><span>生日</span><AInput type=\"date\" onChange={me.addBirthday.bind(me)} className=\"sActive\" value={data.add.birthday} /></div>\n            <div className=\"form-li\"><span>教育背景</span><AInput type=\"text\" onBlur={me.addBackground.bind(me)} value={data.add.background} /></div>\n            <div className=\"form-li\"><span>婚姻状况</span><SelectPop selChecked={data.add.marital} optionList={data.maritalSels} sels={me.selMarital.bind(me)}/></div>\n            <div className=\"form-li\"><span>职务</span><AInput type=\"text\" onBlur={me.addJob.bind(me)} value={data.add.job} /></div>\n            <div className=\"form-li\"><span>部门</span><AInput type=\"text\" onBlur={me.addDepartment.bind(me)} value={data.add.department} /></div>\n            <div className=\"form-li\"><span>备注</span><ATextarea onBlur={me.addRemark.bind(me)} value={data.add.remark}></ATextarea></div>\n            <p className={\"edit-tip \"+data.addTip[0]}>{data.addTip[1]}</p>\n            <div className=\"save-box\"><span onClick={me.addSave.bind(me)}>保存</span><span onClick={me.addCancel.bind(me)}>取消</span></div>\n            \n            </div>: \"\"\n        }\n        \n      </div>\n    )\n  }\n}"
getData_control15_0zwZ6w: >-
  if (!elem) {
    return;
  }

  let data = {
    contacts: [],
    edits: [],
    sexSels: [],
    contactSels: [],
    residenceSels: [],
    maritalSels: [],
    addTip:[],
    add: {
      ifShow: "",
      name: "",
      sex: "",
      contact: "",
      contactPhone: "",
      fax: "",
      email: "",
      residence: "",
      birthday: "",
      background: "",
      marital: "",
      job: "",
      department: "",
      remark: ""
    }
  };

  //联系人列表
    let tables = elem.querySelectorAll(".table_datas");
    [].map.call(tables, function(d, i) {
      let table = [];
      let tds = d.querySelectorAll("td");
      [].map.call(tds, function(m, n) {
        table.push(m.textContent);
      });
      data.contacts.push(table);
    });

  //联系人编辑

  let edits =
  elem.querySelector("#eidtContactList").querySelectorAll(".newAddress");

  [].map.call(edits, function(d, i) {
    let edit = {
      ifShow1: "",
      name: "",
      sex: "",
      contact: "",
      contactPhone: "",
      fax: "",
      email: "",
      residence: "",
      birthday: "",
      background: "",
      marital: "",
      job: "",
      department: "",
      remark: ""
    };
    edit.ifShow1 = d.parentNode.style.display;
    edit.name = d.querySelectorAll("input")[0].value;
    edit.sex = d.querySelectorAll("select")[0].querySelector("option:checked").textContent;
    edit.contact = d.querySelectorAll("select")[1].querySelector("option:checked").textContent;
    edit.contactPhone = d.querySelectorAll("input")[1].value;
    edit.fax = d.querySelectorAll("input")[2].value;
    edit.email = d.querySelectorAll("input")[3].value;
    edit.residence = d.querySelectorAll("select")[2].querySelector("option:checked").textContent;
    edit.birthday = d.querySelectorAll("input")[4].value;
    edit.birthday == "NaN-NaN-NaN" ? "1970-01-01" : edit.birthday;
    edit.background = d.querySelectorAll("input")[5].value;
    edit.marital = d.querySelectorAll("select")[3].querySelector("option:checked").textContent;
    edit.job = d.querySelectorAll("input")[6].value;
    edit.department = d.querySelectorAll("input")[7].value;
    edit.remark = d.querySelector("textarea").value;
    data.edits.push(edit);
  });


  //新增联系人

  data.add.ifShow = elem.querySelector("#newAddressDiv").style.display;

  data.add.name = elem.querySelector("#contact_name").value;

  data.add.sex =
  elem.querySelector("#contact_sex").querySelector("option:checked").textContent;

  data.add.contact =
  elem.querySelector("#contact_contact").querySelector("option:checked").textContent;

  data.add.contactPhone = elem.querySelector("#contact_contactPhone").value;

  data.add.fax = elem.querySelector("#contact_fax").value;

  data.add.email = elem.querySelector("#contact_email").value;

  data.add.residence =
  elem.querySelector("#contact_residence").querySelector("option:checked").textContent;

  data.add.birthday = elem.querySelector("#contact_birthday").value;

  data.add.birthday == "NaN-NaN-NaN" ? "1970-01-01" : data.add.birthday;

  data.add.background = elem.querySelector("#contact_background").value;

  data.add.marital =
  elem.querySelector("#contact_marital").querySelector("option:checked").textContent;

  data.add.job = elem.querySelector("#contact_job").value;

  data.add.department = elem.querySelector("#contact_department").value;

  data.add.remark = elem.querySelector("#contact_remark").value;

  data.addTip[0] = elem.querySelector("#contactMsg").style.display=="none"?
  "visible-hide" : "";

  data.addTip[1] = elem.querySelector("#contactMessage").textContent;

  //select弹窗

  let sexSels = elem.querySelector("#contact_sex").querySelectorAll("option");

  [].map.call(sexSels, function(d, i) {
    data.sexSels.push(d.textContent);
  });

  let contactSels =
  elem.querySelector("#contact_contact").querySelectorAll("option");

  [].map.call(contactSels, function(d, i) {
    data.contactSels.push(d.textContent);
  });

  let residenceSels =
  elem.querySelector("#contact_residence").querySelectorAll("option");

  [].map.call(residenceSels, function(d, i) {
    data.residenceSels.push(d.textContent);
  });

  let maritalSels =
  elem.querySelector("#contact_marital").querySelectorAll("option");

  [].map.call(maritalSels, function(d, i) {
    data.maritalSels.push(d.textContent);
  });

  return data;
doAction_uiControl15_rVvoFf: |-
  if(data.eventType == "back"){
     ysp.appMain.back();
  }else if(data.eventType == "editbtn"){
    let d = data.dataCustom;
    let btn = elem.querySelector("#eidtContactList").querySelectorAll(".float_r")[d].querySelector("input[value='编辑']");
    btn.click();
    btn.dispatchEvent(new Event("click"));
  }else if(data.eventType == "editDelete"){
    let d = data.dataCustom;
    let btn = elem.querySelector("#eidtContactList").querySelectorAll(".float_r")[d].querySelector("input[value='删除']");
    btn.click();
    btn.dispatchEvent(new Event("click"));
  }else if(data.eventType == "editName"){
    let iptData = data.dataCustom;
    let d = iptData[0];
    let i = iptData[1];
    let ipt = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[i].querySelectorAll("input")[0];
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event('change'));
  }else if(data.eventType == "editContactPhone"){
    let iptData = data.dataCustom;
    let d = iptData[0];
    let i = iptData[1];
    let ipt = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[i].querySelectorAll("input")[1];
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event('change'));
  }else if(data.eventType == "editFax"){
    let iptData = data.dataCustom;
    let d = iptData[0];
    let i = iptData[1];
    let ipt = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[i].querySelectorAll("input")[2];
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event('change'));
  }else if(data.eventType == "editEmail"){
    let iptData = data.dataCustom;
    let d = iptData[0];
    let i = iptData[1];
    let ipt = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[i].querySelectorAll("input")[3];
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event('change'));
  }else if(data.eventType == "editBirthday"){
    let iptData = data.dataCustom;
    let d = iptData[0];
    let i = iptData[1];
    let ipt = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[i].querySelectorAll("input")[4];
    ipt.value = d;
    ipt.dispatchEvent(new Event('change'));
  }else if(data.eventType == "editBackground"){
    let iptData = data.dataCustom;
    let d = iptData[0];
    let i = iptData[1];
    let ipt = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[i].querySelectorAll("input")[5];
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event('change'));
  }else if(data.eventType == "editJob"){
    let iptData = data.dataCustom;
    let d = iptData[0];
    let i = iptData[1];
    let ipt = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[i].querySelectorAll("input")[6];
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event('change'));
  }else if(data.eventType == "editDepartment"){
    let iptData = data.dataCustom;
    let d = iptData[0];
    let i = iptData[1];
    let ipt = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[i].querySelectorAll("input")[7];
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event('change'));
  }else if(data.eventType == "editRemark"){
    let iptData = data.dataCustom;
    let d = iptData[0];
    let i = iptData[1];
    let txtArea = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[i].querySelector("textarea");
    txtArea.value = d;
    ipt.blur();
    txtArea.dispatchEvent(new Event('change'));
  }else if(data.eventType == "editSave"){
    let d = data.dataCustom;
    let btn = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[d].querySelector("input[value='保存']");
    //btn.click();
    btn.dispatchEvent(new Event("click"));
  }else if(data.eventType == "editCancel"){
    let d = data.dataCustom;
    let btn = elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[d].querySelector("input[value='取消']");
    btn.click();
    btn.dispatchEvent(new Event("click"));
  }else if(data.eventType == "addBtn"){
    let btn = elem.querySelectorAll(".ablock")[1].querySelectorAll(".pd_tb")[0].querySelector("a");
    btn.click();
    btn.dispatchEvent(new Event("click"));
  }else if(data.eventType == "addSave"){
    let btn = elem.querySelector("#newAddressDiv").querySelector("input[value='保存']");
    //btn.click();
    btn.dispatchEvent(new Event("click"));
  }else if(data.eventType == "addCancel"){
    let btn = elem.querySelector("#newAddressDiv").querySelector("input[value='取消']");
    btn.click();
    btn.dispatchEvent(new Event("click"));
  }else if(data.eventType == "addName"){
    let d = data.dataCustom;
    let ipt = elem.querySelector("#contact_name");
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event("change"));
  }else if(data.eventType == "addContactPhone"){
    let d = data.dataCustom;
    let ipt = elem.querySelector("#contact_contactPhone");
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event("change"));
  }else if(data.eventType == "addFax"){
    let d = data.dataCustom;
    let ipt = elem.querySelector("#contact_fax");
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event("change"));
  }else if(data.eventType == "addEmail"){
    let d = data.dataCustom;
    let ipt = elem.querySelector("#contact_email");
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event("change"));
  }else if(data.eventType == "addBirthday"){
    let d = data.dataCustom;
    let ipt = elem.querySelector("#contact_birthday");
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event("change"));
  }else if(data.eventType == "addBackground"){
    let d = data.dataCustom;
    let ipt = elem.querySelector("#contact_background");
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event("change"));
  }else if(data.eventType == "addJob"){
    let d = data.dataCustom;
    let ipt = elem.querySelector("#contact_job");
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event("change"));
  }else if(data.eventType == "addDepartment"){
    let d = data.dataCustom;
    let ipt = elem.querySelector("#contact_department");
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event("change"));
  }else if(data.eventType == "addRemark"){
    let d = data.dataCustom;
    let ipt = elem.querySelector("#contact_remark");
    ipt.value = d;
    ipt.blur();
    ipt.dispatchEvent(new Event("change"));
  }else if(data.eventType == "selSex"){
    let Num = data.dataCustom;
    let d = Num.indexOf("-");
    let Num2 = parseInt(Num.substr(d+1,Num.length));
    elem.querySelector("#contact_sex").querySelectorAll("option")[Num2].selected = true;
  }else if(data.eventType == "selContact"){
    let Num = data.dataCustom;
    let d = Num.indexOf("-");
    let Num2 = parseInt(Num.substr(d+1,Num.length));
    elem.querySelector("#contact_contact").querySelectorAll("option")[Num2].selected = true;
  }else if(data.eventType == "selResidence"){
    let Num = data.dataCustom;
    let d = Num.indexOf("-");
    let Num2 = parseInt(Num.substr(d+1,Num.length));
    elem.querySelector("#contact_residence").querySelectorAll("option")[Num2].selected = true;
  }else if(data.eventType == "selMarital"){
    let Num = data.dataCustom;
    let d = Num.indexOf("-");
    let Num2 = parseInt(Num.substr(d+1,Num.length));
    elem.querySelector("#contact_marital").querySelectorAll("option")[Num2].selected = true;
  }else if(data.eventType == "editSelSex"){
    let Num = data.dataCustom;
    let d = Num.indexOf("-");
    let Num1 = parseInt(Num.substr(0,d));
    let Num2 = parseInt(Num.substr(d+1,Num.length));
    elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[Num1].querySelectorAll("select")[0].querySelectorAll("option")[Num2].selected = true;
  }else if(data.eventType == "editSelContact"){
    let Num = data.dataCustom;
    let d = Num.indexOf("-");
    let Num1 = parseInt(Num.substr(0,d));
    let Num2 = parseInt(Num.substr(d+1,Num.length));
    elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[Num1].querySelectorAll("select")[1].querySelectorAll("option")[Num2].selected = true;
  }else if(data.eventType == "editSelResidence"){
    let Num = data.dataCustom;
    let d = Num.indexOf("-");
    let Num1 = parseInt(Num.substr(0,d));
    let Num2 = parseInt(Num.substr(d+1,Num.length));
    elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[Num1].querySelectorAll("select")[2].querySelectorAll("option")[Num2].selected = true;
  }else if(data.eventType == "editSelMarital"){
    let Num = data.dataCustom;
    let d = Num.indexOf("-");
    let Num1 = parseInt(Num.substr(0,d));
    let Num2 = parseInt(Num.substr(d+1,Num.length));
    elem.querySelector("#eidtContactList").querySelectorAll(".newAddress")[Num1].querySelectorAll("select")[3].querySelectorAll("option")[Num2].selected = true;
  }
getTemplate_uiControl18_Ni2Kxs: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  handlerClick(e) {\n   let handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"click\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<div className=\"ysp-tip-pop\" style={{display:data[0]}}>\n        <div className=\"mask\"></div>\n        <div className=\"pop-con\">\n          <p className=\"tip-con\">{data[1]}</p>\n          <div class=\"tip-btn\"><span className=\"red-btn\" onClick={me.handlerClick.bind(me)}>确认</span></div>\n        </div>\n      </div>\n    )\n  }\n}"
getData_control18_pkTIdM: |-
  if(!elem){
    return;
  }
  console.log(elem);
  let data=[];
  let ifShow = elem.style.display;
  data[0] = ifShow;
  data[1] = elem.querySelector("#errorMessage").textContent;
  return data;
doAction_uiControl18_Ni2Kxs: |-
  if(eventType == "click"){
    elem.querySelectorAll(".alert_d")[0].querySelector(".icon_1102").click();
  }
getTemplate_uiControl19_5Vt4SH: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  handlerClick(e) {\n   let handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"click\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<div className=\"ysp-tip-pop\" style={{display:data[0]}}>\n        <div className=\"mask\"></div>\n        <div className=\"pop-con\">\n          <p className=\"tip-con\">{data[1]}</p>\n          <div class=\"tip-btn\"><span className=\"red-btn\" onClick={me.handlerClick.bind(me)}>确认</span></div>\n        </div>\n      </div>\n    )\n  }\n}"
getData_control19_IMMJ3T: |-
  if(!elem){
    return;
  }
  let data=[];
  let ifShow = elem.querySelector("#errorMsg").style.display;
  data[0] = ifShow;
  data[1] = elem.querySelector("#errorMessage").textContent;
  return data;
doAction_uiControl19_5Vt4SH: |-
  if(data.eventType == "click"){
    let btn = elem.querySelector("#errorMsg").querySelector(".alert").querySelector(".close");
    btn.dispatchEvent(new Event("click"));
  }
getTemplate_uiControl29_CZic6t: |-
  module.exports = React.createClass({
    render: function() {
      return (
        <div>
          自定义组件用来适配基本组件无法适配的页面元素，您可以通过右键打开该自定义组件编辑器进行编辑
        </div>
      )
    }
  });
getData_control43_WgDV38: ''
doAction_uiControl29_CZic6t: ''
getTemplate_uiControl19_MFcNrD: "import {Component,Fragment} from 'react'; \nexport default class extends Component{\n  handlerClick(e) {\n   let handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"click\"\n      })\n    }\n  }\n  render(){\n    let data = this.props.customData;\n    let me=this;\n    return(\n    \t<div className=\"ysp-tip-pop\" style={{display:data[0]}}>\n        <div className=\"mask\"></div>\n        <div className=\"pop-con\">\n          <p className=\"tip-con\">{data[1]}</p>\n          <div class=\"tip-btn\"><span className=\"red-btn\" onClick={me.handlerClick.bind(me)}>确认</span></div>\n        </div>\n      </div>\n    )\n  }\n}"
getData_control19_TgH0da: |-
  if(!elem){
    return;
  }
  let data=[];
  let ifShow = elem.querySelector("#errorMsg");
  data[0] = ifShow;
  data[1] = elem.querySelector("#errorMessage").textContent;
  return data;
doAction_uiControl19_MFcNrD: |-
  if(data.eventType == "click"){
    let btn = elem.querySelector("#errorMsg").querySelector(".alert").querySelector(".close");
    btn.click();
  }
getTemplate_uiControl19_9TG9lv: |-
  import {Component,Fragment} from 'react'; 
  export default class extends Component{
    handlerClick(e) {
     let handler=this.props.customHandler;
      if(handler){
        handler({
          eventType:"click"
        })
      }
    }
    render(){
      let data = this.props.customData;
      let me=this;
      return(
        <Fragment>
          {data ?<div className="ysp-tip-pop" style={{display:data[0]}}>
          <div className="mask"></div>
          <div className="pop-con">
            <p className="tip-con">{data[1]}</p>
            <div class="tip-btn"><span className="red-btn" onClick={me.handlerClick.bind(me)}>确认</span></div>
          </div>
        </div>:""}
        </Fragment>
        
      )
    }
  }
getData_control19_gpIMOV: |-
  if(!elem){
    return;
  }
  let data=[];
  let ifShow = elem.style.display;
  data[0] = ifShow;
  data[1] = elem.querySelector("#errorMessage").textContent;
  return data;
doAction_uiControl19_9TG9lv: |-
  if(data.eventType == "click"){
    let btn = elem.querySelector(".close");
    btn.dispatchEvent(new Event("click"));
  }
