getData_control35_cEpinS: |
  if (!elem) {
    return;
  }
  return elem.textContent;
doAction_uiControl24_UIzUwZ: ''
getTemplate_uiControl24_UIzUwZ: |-
  import { Header, HeaderLeft } from 'ysp-interior-components';
  import { back } from 'appRenderer';
  export default class extends React.Component{
    constructor(props){
      super(props);
    }
    render() {
      var data=this.props.customData;
      return (
        <div>
          <Header title={data && data}>
            <HeaderLeft>
              <i onClick={back}></i>
            </HeaderLeft>
          </Header>
        </div>
      )
    }
  }
getData_control36_DZGyD3: >
  if (!elem) {
    return;
  }

  var data = {};

  var shippingAddress = {};

  var provinceAll = []; //所有省

  var provinceVal = [];

  var cityAll = []; //所有市

  var cityVal = [];

  var zoneAll = []; //所有区

  var zoneVal = [];

  var detailAddress = ''; //详细地址

  var zipCode = ''; //邮编

  var consignee = ''; //收货人

  var receivePhone = ''; //收货电话

  var signType = []; //签收类型

  var signStandard = ''; //签收标准

  var invoiceInformation = ''; //开票信息

  var sample = ''; //样例

  var taxType = []; //税务登记类型

  var taxPayerNumber = ''; //纳税人识别号

  var invoiceAddress = ''; //开票详细地址

  var invoicePhone = ''; //开票电话

  var invoiceOpenBank = ''; //开票开户行

  var invoiceOpenBankID = ''; //开票银行账号

  var billToInformation = ''; //收票信息

  var collectAddress = {}; //收票地址

  var collectProvince = []; //收票省

  var collectProvinceVal = [];

  var collectCity = []; //收票市

  var collectCityVal = [];

  var collectZone = []; //收票区

  var collectZoneVal = [];

  var collectDetailAddress = ''; //收票详细地址

  var collectContact = ''; //收票人

  var collectPhone = ''; //收票人电话

  var collectZipCode = ''; //收票邮政编码

  var province =
  elem.querySelector('#receive_province').querySelectorAll('option');

  for (var i = 0; i < province.length; i++) {
    provinceAll.push(province[i].textContent);
    provinceVal.push(province[i].value);
  }

  var city = elem.querySelector('#receive_city').querySelectorAll('option');

  for (var i = 0; i < city.length; i++) {
    cityAll.push(city[i].textContent);
    cityVal.push(city[i].value);
  }

  var zone = elem.querySelector('#receive_zone').querySelectorAll('option');

  for (var i = 0; i < zone.length; i++) {
    zoneAll.push(zone[i].textContent);
    zoneVal.push(zone[i].value);
  }

  detailAddress = elem.querySelector('#receive_address').placeholder;

  var _detailAddress =
  elem.querySelector('#receive_address').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#receive_address').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  zipCode = elem.querySelector('#receive_postcode').placeholder;

  consignee = elem.querySelector('#receive_man').placeholder;

  var _consignee =
  elem.querySelector('#receive_man').parentNode.querySelector('.input_error') &&
  elem.querySelector('#receive_man').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  receivePhone = elem.querySelector('#receive_phone').placeholder;

  var _receivePhone =
  elem.querySelector('#receive_phone').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#receive_phone').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  var receiveText = elem.querySelector('#sign').querySelectorAll('label');

  var checkedStatus =
  elem.querySelector('#sign').querySelectorAll('.iradio_tlmall');

  for (var i = 0; i < receiveText.length; i++) {
    var receiveObj = {};

    for (var j = 0; j < receiveText.length; j++) {
      receiveObj.text = receiveText[i].textContent;
      receiveObj.status = checkedStatus[i].classList.contains('checked') ? true : false;
    }

    signType.push(receiveObj);
  }

  signStandard = elem.querySelector('#mRule') &&
  elem.querySelector('#mRule').value;

  invoiceInformation =
  elem.querySelectorAll('.zc_infos_title')[0].querySelector('h4').textContent.slice(0,
  4);

  sample = elem.querySelector('.zc_infos_title').querySelector('a').textContent;

  var taxText = elem.querySelector('.zc_count_signs').querySelectorAll('label');

  var taxStatus =
  elem.querySelector('.zc_count_signs').querySelectorAll('.iradio_tlmall');

  for (var i = 0; i < taxText.length; i++) {
    var taxObj = {};

    for (var j = 0; j < taxText.length; j++) {
      taxObj.text = taxText[i].textContent;
      taxObj.status = taxStatus[i].classList.contains('checked') ? true : false;
    }

    taxType.push(taxObj);
  }

  taxPayerNumber = elem.querySelector('#invoice_taxNum').placeholder;

  var _taxPayerNumber =
  elem.querySelector('#invoice_taxNum').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#invoice_taxNum').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  invoiceAddress = elem.querySelector('#invoice_Address').placeholder;

  var _invoiceAddress =
  elem.querySelector('#invoice_Address').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#invoice_Address').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  invoicePhone = elem.querySelector('#invoice_phone').placeholder;

  var _invoicePhone =
  elem.querySelector('#invoice_phone').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#invoice_phone').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  invoiceOpenBank = elem.querySelector('#invoice_openBank').placeholder;

  var _invoiceOpenBank =
  elem.querySelector('#invoice_openBank').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#invoice_openBank').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  invoiceOpenBankID = elem.querySelector('#invoice_openBankID').placeholder;

  var _invoiceOpenBankID =
  elem.querySelector('#invoice_openBankID').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#invoice_openBankID').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  billToInformation =
  elem.querySelectorAll('.zc_infos_title')[1].querySelector('h4').textContent;

  var cProvince =
  elem.querySelector('#collect_province').querySelectorAll('option');

  for (var i = 0; i < cProvince.length; i++) {
    collectProvince.push(cProvince[i].textContent);
    collectProvinceVal.push(cProvince[i].value);
  }

  var cCity = elem.querySelector('#collect_city').querySelectorAll('option');

  for (var i = 0; i < cCity.length; i++) {
    collectCity.push(cCity[i].textContent);
    collectCityVal.push(cCity[i].value);
  }

  var cZone = elem.querySelector('#collect_zone').querySelectorAll('option');

  for (var i = 0; i < cZone.length; i++) {
    collectZone.push(cZone[i].textContent);
    collectZoneVal.push(cZone[i].value);
  }

  collectDetailAddress = elem.querySelector('#collect_address').placeholder;

  var _collectDetailAddress =
  elem.querySelector('#collect_address').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#collect_address').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  collectContact = elem.querySelector('#collect_contact').placeholder;

  var _collectContact =
  elem.querySelector('#collect_contact').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#collect_contact').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  collectPhone = elem.querySelector('#collect_phone').placeholder;

  var _collectPhone =
  elem.querySelector('#collect_phone').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#collect_phone').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  collectZipCode = elem.querySelector('#collect_postcode').placeholder;

  var _collectZipCode =
  elem.querySelector('#collect_postcode').parentNode.querySelector('.input_error')
  &&
  elem.querySelector('#collect_postcode').parentNode.querySelector('.input_error').children.length
  > 0 ? true : false;

  data = {
    shippingAddress: {
      provinceAll: provinceAll,
      provinceVal: provinceVal,
      cityAll: cityAll,
      cityVal: cityVal,
      zoneAll: zoneAll,
      zoneVal: zoneVal
    },
    detailAddress: detailAddress,
    _detailAddress: _detailAddress,
    zipCode: zipCode,
    consignee: consignee,
    _consignee: _consignee,
    receivePhone: receivePhone,
    _receivePhone: _receivePhone,
    signType: signType,
    signStandard: signStandard,
    invoiceInformation: invoiceInformation,
    sample: sample,
    taxType: taxType,
    taxPayerNumber: taxPayerNumber,
    _taxPayerNumber: _taxPayerNumber,
    invoiceAddress: invoiceAddress,
    _invoiceAddress: _invoiceAddress,
    invoicePhone: invoicePhone,
    _invoicePhone: _invoicePhone,
    invoiceOpenBank: invoiceOpenBank,
    _invoiceOpenBank: _invoiceOpenBank,
    invoiceOpenBankID: invoiceOpenBankID,
    _invoiceOpenBankID: _invoiceOpenBankID,
    billToInformation: billToInformation,
    collectAddress: {
      collectProvince: collectProvince,
      collectProvinceVal: collectProvinceVal,
      collectCity: collectCity,
      collectCityVal: collectCityVal,
      collectZone: collectZone,
      collectZoneVal: collectZoneVal
    },
    collectDetailAddress: collectDetailAddress,
    _collectDetailAddress: _collectDetailAddress,
    collectContact: collectContact,
    _collectContact: _collectContact,
    collectPhone: collectPhone,
    _collectPhone: _collectPhone,
    collectZipCode: collectZipCode,
    _collectZipCode: _collectZipCode
  };

  return data;
doAction_uiControl25_ViyfWT: |
  //下载模版
  if (data.eventType == 'downloadTemplate') {
    elem.querySelector('.downTemp').click();
  } //选择省
  if (data.eventType == 'chooseProvince') {
    elem.querySelector('#receive_province').value = data.dataCustom;
    elem.querySelector('#receive_province').dispatchEvent(new Event('change'));
  } //选择市
  if (data.eventType == 'chooseCity') {
    elem.querySelector('#receive_city').value = data.dataCustom;
    elem.querySelector('#receive_city').dispatchEvent(new Event('change'));
  } //选择区
  if (data.eventType == 'chooseZone') {
    elem.querySelector('#receive_zone').value = data.dataCustom;
    elem.querySelector('#receive_zone').dispatchEvent(new Event('change'));
  } //详细地址
  if (data.eventType == 'detailAddress') {
    elem.querySelector('#receive_address').value = data.dataCustom;
    elem.querySelector('#receive_address').blur();
  } //输入邮编
  if (data.eventType == 'zipCode') {
    elem.querySelector('#receive_postcode').value = data.dataCustom;
    elem.querySelector('#receive_postcode').blur();
  } //收货人
  if (data.eventType == 'consignee') {
    elem.querySelector('#receive_man').value = data.dataCustom;
    elem.querySelector('#receive_man').blur();
  } //收货电话
  if (data.eventType == 'receivePhone') {
    elem.querySelector('#receive_phone').value = data.dataCustom;
    elem.querySelector('#receive_phone').blur();
  } //选择签收类型
  if (data.eventType == 'signM') {
    elem.querySelector('#aSign').checked = false;
    elem.querySelector('#maSign').checked = false;
    elem.querySelector('#mSign').checked = true;
    elem.querySelector('#mSign').parentNode.classList.add('checked');
    elem.querySelector('#mSign').parentNode.parentNode.nextElementSibling.querySelector('.iradio_tlmall').classList.remove('checked');
    elem.querySelector('#mSign').parentNode.parentNode.nextElementSibling.nextElementSibling.querySelector('.iradio_tlmall').classList.remove('checked');
    elem.querySelector('#ashint').style.display = 'none';
    elem.querySelector('#mRule').disabled = true;
  }
  if (data.eventType == 'signA') {
    elem.querySelector('#mSign').checked = false;
    elem.querySelector('#maSign').checked = false;
    elem.querySelector('#aSign').checked = true;
    elem.querySelector('#aSign').parentNode.classList.add('checked');
    elem.querySelector('#aSign').parentNode.parentNode.nextElementSibling.querySelector('.iradio_tlmall').classList.remove('checked');
    elem.querySelector('#aSign').parentNode.parentNode.previousElementSibling.querySelector('.iradio_tlmall').classList.remove('checked');
    elem.querySelector('#ashint').style.display = 'block';
    elem.querySelector('#mRule').disabled = false;
    elem.querySelector('#mRule').value = '';
  }
  if (data.eventType == 'signMA') {
    elem.querySelector('#mSign').checked = false;
    elem.querySelector('#aSign').checked = false;
    elem.querySelector('#maSign').checked = true;
    elem.querySelector('#maSign').parentNode.classList.add('checked');
    elem.querySelector('#maSign').parentNode.parentNode.previousElementSibling.querySelector('.iradio_tlmall').classList.remove('checked');
    elem.querySelector('#maSign').parentNode.parentNode.previousElementSibling.previousElementSibling.querySelector('.iradio_tlmall').classList.remove('checked');
    elem.querySelector('#ashint').style.display = 'block';
    elem.querySelector('#mRule').disabled = false;
    elem.querySelector('#mRule').value = '';
  } //收货授权章名称
  if (data.eventType == 'authorizationName') {
    elem.querySelector('#getGoodsSeal').click();
  } //填写签收标准
  if (data.eventType == 'writeSign') {
    elem.querySelector('#mRule').value = data.dataCustom;
    elem.querySelector('#mRule').blur();
  } //开始日期
  if (data.eventType == 'startDate') {
    elem.querySelector('#receive_timeStart').value = data.dataCustom;
    elem.querySelector('#receive_timeStart').blur();
    elem.parentNode.parentNode.querySelector('iframe').contentDocument.querySelector('.WdateDiv').style.display = 'none';
  } //结束日期
  if (data.eventType == 'endDate') {
    elem.querySelector('#receive_timeEnd').value = data.dataCustom;
    elem.querySelector('#receive_timeEnd').blur();
    elem.parentNode.parentNode.querySelector('iframe').contentDocument.querySelector('.WdateDiv').style.display = 'none';
  } //上传收货委托书
  if (data.eventType == 'updateFile') {
    elem.ownerDocument.querySelector('#fileA_echo').textContent = data.dataCustom.name;
    elem.ownerDocument.querySelector('#fileA_value').value = data.dataCustom.path;
  } //上传身份证附件
  if (data.eventType == 'updateIdCard') {
    elem.ownerDocument.querySelector('#fileB_echo').textContent = data.dataCustom.name;
    elem.ownerDocument.querySelector('#fileB_value').value = data.dataCustom.path;
  } //立即提交
  if (data.eventType == 'nowSubmit') {
    elem.querySelector('.reg-bus-btns').querySelector('.zc_btn_small').click();
  }
getTemplate_uiControl25_ViyfWT: "export default class extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      signM:true,\n      signA:false\n    }\n  }\n  //下载模版\n  downloadTemplate=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType:\"downloadTemplate\"\n      })\n    }\n  }\n  //选择省\n  chooseProvince=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.querySelectorAll('option')[target.options.selectedIndex].getAttribute('value'),\n        eventType: 'chooseProvince'\n      })\n    }\n  }\n  //选择市\n  chooseCity=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.querySelectorAll('option')[target.options.selectedIndex].getAttribute('value'),\n        eventType: 'chooseCity'\n      })\n    }\n  }\n  //选择区\n  chooseZone=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.querySelectorAll('option')[target.options.selectedIndex].getAttribute('value'),\n        eventType: 'chooseZone'\n      })\n    }\n  }\n  //详细地址\n  detailAddress=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType: 'detailAddress'\n      })\n    }\n  }\n  //输入邮编\n  zipCode=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType: 'zipCode'\n      })\n    }\n  }\n  //收货人\n  consignee=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType: 'consignee'\n      })\n    }\n  }\n  //收货电话\n  receivePhone=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType: 'receivePhone'\n      })\n    }\n  }\n  //上传收货委托书\n  updateFile=(e)=>{\n    var name = e.target.files[0].name;\n    var value = e.target.files[0].path;\n    var handler=this.props.customHandler;\n e.target.parentNode.previousSibling.previousSibling.value = name;\n    if(handler){\n      handler({\n        data:{'name':name,'path':value},\n        eventType:\"updateFile\"\n      })\n    }\n  }\n  //上传身份证附件\n  updateIdCard=(e)=>{\n    var name = e.target.files[0].name;\n    var value = e.target.files[0].path;\n    var handler=this.props.customHandler;\n e.target.parentNode.previousSibling.previousSibling.value = name;\n    if(handler){\n      handler({\n        data:{'name':name,'path':value},\n        eventType:\"updateIdCard\"\n      })\n    }\n  }\n  //选择签收类型\n  chooseSignType=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    var el = target.parentNode.parentNode.querySelectorAll('b');\n    for(var i=0;i<el.length;i++){\n      if(target.className == 'sign-checked'){\n        el[i].className='sign-checked';\n        target.className = 'sign-nochecked'\n      }\n      if(target.className == 'sign-nochecked'){\n        el[i].className='sign-nochecked';\n        target.className = 'sign-checked';\n      }\n      if(target.nextElementSibling.innerHTML == '本人签收不盖章' && target.className =='sign-checked'){\n        this.setState({\n          signM:true,\n          signA:false\n        })\n        console.log(1)\n        if(handler){\n          handler({\n            eventType: 'signM'\n          })\n        }\n      }else if(target.nextElementSibling.innerHTML == '被授权章签收' && target.className =='sign-checked'){\n        this.setState({\n          signM:false,\n          signA:true\n        })\n        if(handler){\n          handler({\n            eventType: 'signA'\n          })\n        }\n      }else if(target.nextElementSibling.innerHTML == '本人签收或被授权章签收' && target.className =='sign-checked'){\n        this.setState({\n          signM:false,\n          signA:true\n        })\n        if(handler){\n          handler({\n            eventType: 'signMA'\n          })\n        }\n      }\n    }\n  }\n  //收货授权章名称\n  authorizationName=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'authorizationName'\n      })\n    }\n  }\n  //填写签收标准\n  writeSign=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType: 'writeSign'\n      })\n    }\n  }\n  //开始日期\n  startDate=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType: 'startDate'\n      })\n    }\n  }\n  //结束日期\n  endDate=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        data:target.value,\n        eventType: 'endDate'\n      })\n    }\n  }\n  //立即提交\n  nowSubmit=(e)=>{\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'nowSubmit'\n      })\n    }\n  }\n  render() {\n    var data=this.props.customData;\n    return (\n      <div>\n        <div className='receive-iformation-form'>\n          <div className='download-template'>\n            <p>\n              <span>收货授权委托书模版</span>\n              <button onClick={this.downloadTemplate}>下载模版</button>\n            </p>\n            <p>请下载收货授权委托书模版并进行填写,盖章后请将扫描件上传</p>\n          </div>\n          <p className='shipping-address'>\n            <i>*</i>\n            <select onChange={this.chooseProvince}>\n              {data.shippingAddress && data.shippingAddress.provinceAll.map((item,i)=>(\n                <option value={data.shippingAddress.provinceVal[i]}>{item}</option>\n              ))}\n            </select>\n            <select onChange={this.chooseCity}>\n              {data.shippingAddress && data.shippingAddress.cityAll.map((item,i)=>(\n                <option value={data.shippingAddress.cityVal[i]}>{item}</option>\n              ))}\n            </select>\n            <select onChange={this.chooseZone}>\n              {data.shippingAddress && data.shippingAddress.zoneAll.map((item,i)=>(\n                <option value={data.shippingAddress.zoneVal[i]}>{item}</option>\n              ))}\n            </select>\n        \t</p>\n          <p className={data._detailAddress ? 'detail-address errorIcon' : 'detail-address'}>\n            <i>*</i>\n            <input type='text' placeholder={data.detailAddress && data.detailAddress} onBlur={this.detailAddress}/>\n            <em>x</em>\n          </p>\n          <p className='zip-code'>\n            <input type='text' placeholder={data.zipCode && data.zipCode} onBlur={this.zipCode}/>\n          </p>\n          <p className={data._consignee ? 'consignee errorIcon' :'consignee'}>\n            <i>*</i>\n            <input type='text' placeholder={data.consignee && data.consignee} onBlur={this.consignee}/>\n            <em>x</em>\n          </p>\n          <p className={data._receivePhone ? 'receive-phone errorIcon' : 'receive-phone'}>\n            <i>*</i>\n            <input type='text' placeholder={data.receivePhone && data.receivePhone} onBlur={this.receivePhone}/>\n            <em>x</em>\n          </p>\n          <div className='choose-sign-type'>\n            <i>*</i>\n            {data.signType && data.signType.map((item,i)=>(\n              <p className='sign-type'>\n                <b className={item.status?'sign-checked':'sign-nochecked'} onClick={this.chooseSignType}></b>\n              \t<span>{item.text}</span>\n            \t</p>\n            ))}\n          </div>\n          {this.state.signM?<p className='sign-standard-one'>\n            <i>*</i>\n            <span>签收标准:</span>\n            <input type='text' value={data.signStandard && data.signStandard} disabled/>\n          </p>:null}\n          {this.state.signA?<div className='sign-standard'>\n            <p>请填写<a onClick={this.authorizationName}>收货授权章名称</a>，本公司会根据您的收货授权委托书审核该字段</p>\n            <p className='sign-standard-two'>\n              <i>*</i>\n              <span>签收标准:</span>\n              <input type='text' onBlur={this.writeSign}/>\n              <em>x</em>\n            </p>\n          </div>:null}\n          <p className='update-file'>\n            <i>*</i>\n            <AInput type='text' placeholder='请输入收获授权委托书'/>\n            <em>x</em>\n            <button><AInput type='file' onChange={this.updateFile}/>拍照或扫描上传</button>\n          </p>\n          <p className='update-idCard'>\n            <i>*</i>\n            <AInput type='text' placeholder='请输入身份证'/>\n            <em>x</em>\n            <button><AInput type='file' onChange={this.updateIdCard}/>拍照或扫描上传</button>\n          </p>\n          <div className='period-validity'>\n           <i>*</i>\n            <div>\n              <p><input type='date' onChange={this.startDate}/><span>至</span><input type='date' onChange={this.endDate}/></p>\n              <label>请输入授权有效期</label>\n            </div>\n          </div>\n        </div>\n        <h3>{data.invoiceInformation && data.invoiceInformation}<a href='javascript:;'>{data.sample && data.sample}</a></h3>\n        <div className='invoice-iformation-form'>\n          <div className='choose-tax-type'>\n            <i>*</i>\n            {data.taxType && data.taxType.map((item,i)=>(\n              <p className='tax-type'>\n                <b className={item.status?'sign-checked':'sign-nochecked'} onClick={this.chooseSignType}></b>\n              \t<span>{item.text}</span>\n            \t</p>\n            ))}\n          </div>\n          <p className={data._taxPayerNumber ? 'tax-payer-number errorIcon' : 'tax-payer-number'}>\n            <i>*</i>\n            <input type='text' placeholder={data.taxPayerNumber && data.taxPayerNumber} onBlur={this.taxPayerNumber}/>\n            <em>x</em>\n          </p>\n          <p className={data._invoiceAddress ? 'invoice-address errorIcon' : 'invoice-address'}>\n            <i>*</i>\n            <input type='text' placeholder={data.invoiceAddress && data.invoiceAddress} onBlur={this.invoiceAddress}/>\n            <em>x</em>\n          </p>\n          <p className={data._invoicePhone ? 'invoice-phone errorIcon' : 'invoice-phone'}>\n            <i>*</i>\n            <input type='text' placeholder={data.invoicePhone && data.invoicePhone} onBlur={this.invoicePhone}/>\n            <em>x</em>\n          </p>\n          <p className={data._invoiceOpenBank ? 'invoice-bank errorIcon' : 'invoice-bank'}>\n            <i>*</i>\n            <input type='text' placeholder={data.invoiceOpenBank && data.invoiceOpenBank} onBlur={this.invoiceOpenBank}/>\n            <em>x</em>\n          </p>\n          <p className={data._invoiceOpenBankID ? 'invoice-bank-id errorIcon' : 'invoice-bank-id'}>\n            <i>*</i>\n            <input type='text' placeholder={data.invoiceOpenBankID && data.invoiceOpenBankID} onBlur={this.invoiceOpenBankID}/>\n            <em>x</em>\n          </p>\n          <p className='tax-registration-certificate'>\n            <i>*</i>\n            <AInput type='text' placeholder='请输入税务登记证'/>\n            <em>x</em>\n            <button><AInput type='file' onChange={this.updateIdCard}/>拍照或扫描上传</button>\n          </p>\n        </div>\n        <h3>{data.billToInformation && data.billToInformation}</h3>\n        <div className='collect-iformation-form'>\n          <p className='bill-address'>\n            <i>*</i>\n            <select onChange={this.chooseProvince}>\n              {data.collectAddress && data.collectAddress.collectProvince.map((item,i)=>(\n                <option value={data.collectAddress.collectProvinceVal[i]}>{item}</option>\n              ))}\n            </select>\n            <select onChange={this.chooseCity}>\n              {data.collectAddress && data.collectAddress.collectCity.map((item,i)=>(\n                <option value={data.collectAddress.collectCityVal[i]}>{item}</option>\n              ))}\n            </select>\n            <select onChange={this.chooseZone}>\n              {data.collectAddress && data.collectAddress.collectZone.map((item,i)=>(\n                <option value={data.collectAddress.collectZoneVal[i]}>{item}</option>\n              ))}\n            </select>\n        \t</p>\n          <p className={data._collectDetailAddress ? 'collect-detail-address errorIcon' : 'collect-detail-address'}>\n            <i>*</i>\n            <input type='text' placeholder={data.collectDetailAddress && data.collectDetailAddress} onBlur={this.collectDetailAddress}/>\n            <em>x</em>\n          </p>\n          <p className={data._collectContact ? 'collect-contact errorIcon' : 'collect-contact'}>\n            <i>*</i>\n            <input type='text' placeholder={data.collectContact && data.collectContact} onBlur={this.collectContact}/>\n            <em>x</em>\n          </p>\n          <p className={data._collectPhone ? 'collect-phone errorIcon' : 'collect-phone'}>\n            <i>*</i>\n            <input type='text' placeholder={data.collectPhone && data.collectPhone} onBlur={this.collectPhone}/>\n            <em>x</em>\n          </p>\n          <p className={data._collectZipCode ? 'collect-code errorIcon' : 'collect-code'}>\n            <i>*</i>\n            <input type='text' placeholder={data.collectZipCode && data.collectZipCode} onBlur={this.collectZipCode}/>\n            <em>x</em>\n          </p>\n        </div>\n        <div className='submit-immediately'>\n          <button onClick={this.nowSubmit}>立即提交</button>\n        </div>\n      </div>\n    )\n  }\n}"
getData_undefined: ''
doAction_: ''
getTemplate_: |-
  module.exports = React.createClass({
    render: function() {
      return (
        <div>
          自定义组件用来适配基本组件无法适配的页面元素，您可以通过右键打开该自定义组件编辑器进行编辑
        </div>
      )
    }
  });
getData_control43_41ZpBM: |
  if (!elem) {
    return;
  }
  return elem.textContent;
doAction_uiControl29_ZbSudW: ''
getTemplate_uiControl29_ZbSudW: |-
  export default class extends React.Component{
    constructor(props){
      super(props);
    }
    render() {
      var data=this.props.customData;
      return (
        <div className='receive-error-msg'>
          <p>{data && data}</p>
        </div>
      )
    }
  }
