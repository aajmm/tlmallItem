getTemplate_uiControl16_ohrCBC: "import { Header, HeaderLeft } from 'ysp-interior-components';\nimport { back } from 'appRenderer';\nexport default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  goBack=()=>{\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"goBack\"\n      })\n    }\n  }\n  render() {\n    return (\n      <div className='main-title'>\n        <Header title=\"收货地址管理\">\n          <HeaderLeft>\n            <i className='icon-goback'  onClick={back}></i>\n          </HeaderLeft>\n\t\t\t\t</Header>\n      </div>\n    )\n  }\n};"
getData_control16_QdoZw3: ''
doAction_uiControl16_ohrCBC: |-
  if (data.eventType == 'goBack') {
    // console.log(111);
    ysp.appMain.back();
  }
getTemplate_uiControl20_cgL9fW: |-
  import {Component,Fragment} from 'react'; 
  import {CustomHeader} from 'ysp-custom-components';
  export default class extends React.Component{
    constructor(props){
      super(props);
    }
    tabTitle=(type, e)=>{
      var handler = this.props.customHandler;
      if(handler){
        handler({
          eventType: type
        })
      }
    }
    
    //返回
    back=()=>{ 
     let handler = this.props.customHandler;
     if (handler) {
      handler({
      eventType: 'back'
      });
     }
    }
    
    render() {
      var data = this.props.customData;
      var me = this;
      return (
        <Fragment>
          <CustomHeader 
               data={{centerText:"收货地址管理"}} 
               backIsShow={true} 
               filterIsShow={false}
               editIsShow={false}
               back={me.back.bind(me)}
            />
          <div class="tab-title">
            <a href="javascript:;" className={data[0].className} onClick={this.tabTitle.bind(this,'effective')}>{data[0].text}</a>
            <a href="javascript:;" className={data[1].className} onClick={this.tabTitle.bind(this,'failure')}>{data[1].text}</a>
          </div>
        </Fragment>
      )
    }
  }
getData_control19_C1K69x: |-
  if(!elem){
    return;
  }

  var nodes = elem.querySelectorAll("a");
  var data = [];

  for(var i=0; i<nodes.length; i++){
    data.push({
      text: nodes[i].innerText,
      className: "btn "+nodes[i].getAttribute("class")
    });
  }

  return data;
doAction_uiControl20_cgL9fW: "var type = data.eventType;\nvar tabItems = elem.querySelectorAll(\".tab_lists a\");\n\nif(data.eventType == \"back\"){\n   ysp.appMain.back();\n}else if(type == 'effective'){\n\tconsole.log(\"effective\");\n  tabItems[0].click();\n}else if(type == 'failure'){\n\tconsole.log(\"failure\");\n  tabItems[1].click();\n}"
getTemplate_uiControl15_ETKNLR: "export default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  \n render() {\n   var data = this.props.customData;\n   console.log(data);\n   if(!data){\n     return (\n       <div className=\"address-list\"></div>\n     )\n   }else{\n     var tableContent = function(cdata){\n       return (\n        <div className=\"list\">\n           <table cellpadding=\"0\" cellspacing=\"0\">\n              <tbody>\n                {cdata.map((item, index)=>{\n                  if(index<7){\n                    return (\n                      <tr className={index<4?\"main\":\"\"}>\n                        <td>{item.text}：<span className={item.valueClass}>{item.value}</span></td>\n                      </tr>\n                  \t)\n                  }else if(index==7 || index==8){\n                    return (\n                      <tr className=\"listBtn\">\n                        <td>{item.text}\n                          <div className=\"listBtn-group\">{item.btnValue.map((btnItem, btnIndex)=>{\n                            return (\n                              <input type=\"button\" onClick=\"handlerTableList({btnIndex})\" value={btnItem.value} />\n                            )\n                          })}</div>\n                        </td>\n                      </tr>\n                    )\n                  }else if(index==9){\n                    return (\n                      <tr>\n                        <div className=\"btm-btnGroup\">\n                          {item.btnGroup.map((gItem, gIndex)=>{\n                            return (\n                              <a href=\"javascript:;\" onClick=\"handlerBtnGroup({gIndex})\" className=\"btn-link\">{gItem}</a>\n                            )\n                          })}\n                        </div>\n                      </tr>\n                    )\n                  }\n                  \n                })}\n              </tbody>\n           </table>\n        </div>\n       )       \n       \n     };\n     \n     return (\n       <div className=\"address-list\" id={data.id} style={{display:data.display}}>\n         \n           {data.list && data.list.map((item, index)=>{\n             return (\n               <div className=\"item-list\">\n                <div className=\"content\">\n                    <div className=\"title\">\n                      <span>{item.title}</span>\n                      <em>{item.defaultText}</em>\n                    </div>\n                    <div className=\"states\">\n                      <div className=\"item\">{item.states[0].text}：<span className={item.states[0].valueClass}>{item.states[0].value}</span></div>\n                      <div className=\"item\">{item.states[1].text}：<span className={item.states[1].valueClass}>{item.states[1].value}</span></div>\n                    </div>\n                    {tableContent(item.tableList)}\n                </div>\n                 \n         \t\t\t</div>\n             )\n           })}\n       </div>\n     )\n   }\n }\n}"
getData_control17_q2rqfw: "if(!elem){\n  return;\n}\n\nvar nodes = elem.querySelectorAll(\".ablock\");\nvar data = {}, dataList = [];\n\nfor(var i=0; i<nodes.length; i++){\n  var title = nodes[i].querySelector(\".title_e span\").innerText;\n  var defaultText = nodes[i].querySelector(\".title_e .cr_blue01\").innerText;\n  \n// states\n  var nodeStateItem = nodes[i].querySelectorAll(\".title_e .states .item\");\n  var dataStates = [];\n  \n  for(var j=0; j<nodeStateItem.length; j++){\n    var nodeStateVal = nodeStateItem[j].querySelector(\"span\");\n    dataStates.push({\n      \"text\": nodeStateItem[j].innerText.split(\"：\")[0],\n      \"value\": nodeStateVal.innerText,\n      \"valueClass\": nodeStateVal.getAttribute(\"class\")\n    });\n  }\n  \n// table列表\n  var tableTrs = nodes[i].querySelectorAll(\".otable tr\");\n  var dataTable = [];\n  \n  for(var z=0; z<tableTrs.length; z++){\n    var tds = tableTrs[z].querySelectorAll(\"td\");\n    \n    for(var y=0; y<tds.length; y++){\n      var nodeSpanVal = tds[y].querySelector(\"span\");\n      if(z<3){\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"value\": nodeSpanVal.innerText,\n          \"valueClass\": nodeSpanVal.getAttribute(\"class\")?nodeSpanVal.getAttribute(\"class\"):\"\"\n        });\n      }else if(z==3 && y<2){\n        var nodeIpts = nodeSpanVal.querySelectorAll(\"input\");\n        var dataIptsVal = [];\n        for(var ipt=0; ipt<nodeIpts.length; ipt++){\n          dataIptsVal.push({\n            \"value\": nodeIpts[ipt].value,\n            \"className\": nodeIpts[ipt].getAttribute(\"class\")\n          });\n        }\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"btnValue\": dataIptsVal\n        });\n      }else if(z==3 && y==2){\n      \tvar nodeEditBarAs = tds[y].querySelectorAll(\".editBar a\");\n        var dataBtns = [];\n        \n        for(var as=0; as< nodeEditBarAs.length; as++){\n        \tdataBtns.push(nodeEditBarAs[as].innerText);\n        }\n        dataTable.push({\n          \"btnGroup\": dataBtns\n        });\n      }\n      \n    }\n  }\n  \n  dataList.push({\n    \"title\": title,\n    \"defaultText\": defaultText,\n    \"states\": dataStates,\n    \"tableList\": dataTable\n  });\n}\n\ndata = {\n  \"id\": elem.getAttribute(\"id\"),\n  \"display\": elem.style.display==\"\"||\"block\"?\"block\":\"none\",\n\t\"list\": dataList\n};\n\nreturn data;"
doAction_uiControl15_ETKNLR: ''
getTemplate_uiControl21_MXLiIk: "export default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  handlerTableList(_listIndex, _rowIndex, _index, e){\n    console.log(\"handlerTableList\");\n    var handler = this.props.customHandler;\n    var target = e.target;\n    if(handler){\n      handler({\n        eventType: 'tablelistClick',\n        customData: [_listIndex, _rowIndex, _index]\n      });\n    }\n  }\n render() {\n   var data = this.props.customData;\n   var me = this;\n   console.log(data);\n   if(!data){\n     return (\n       <div className=\"address-list\" style={{display:\"none\"}}></div>\n     )\n   }else{\n     var tableContent = function(listIndex, cdata){\n       return (\n        <div className=\"list\"> \n           <table cellpadding=\"0\" cellspacing=\"0\">\n              <tbody>\n                {cdata.map((item, index)=>{\n                  if(index<7){\n                    return (\n                      <tr className={index<4?\"main\":\"\"}>\n                        <td>{item.text}：<span className=\n{item.valueClass}>{item.value}</span></td>\n                      </tr>\n                  \t)\n                  }else if(index==7 || index==8){\n                    return (\n                      <tr className=\"listBtn\">\n                        <td>{item.text}\n                          <div className=\"listBtn-group\">\n{item.btnValue.map((btnItem, btnIndex)=>{\n                            return (\n                              <input type=\"button\" \nonClick={me.handlerTableList.bind(me, listIndex, index, btnIndex)}  value=\n{btnItem.value} />\n                            )\n                          })}</div>\n                        </td>\n                      </tr>\n                    )\n                  }else if(index==9){\n                    return (\n                      <tr>\n                        <div className={item.activeClass}>\n                          {item.btnGroup.map((gItem, gIndex)=>{\n                            return (\n                              <a href=\"javascript:;\" \n\nonClick={me.handlerTableList.bind(me, listIndex, index, gIndex)} className=\"btn-link\">{gItem}</a>\n                            )\n                          })}\n                        </div>\n                      </tr>\n                    )\n                  }\n                  \n                })}\n              </tbody>\n           </table>\n        </div>\n       )       \n       \n     };\n     \n     return (\n       <div className=\"address-list\" id={data.id} style=\n{{display:data.display}}>\n         \n           {data.list && data.list.map((item, index)=>{\n             return (\n               <div className=\"item-list\">\n                <div className=\"content\">\n                    <div className=\"title\">\n                      <span>{item.title}</span>\n                      <em>{item.defaultText}</em>\n                    </div>\n                    <div className=\"states\">\n                      <div className=\"item\">{item.states[0].text}：\n<span className={item.states[0].valueClass}>{item.states[0].value}</span></div>\n                      <div className=\"item\">{item.states[1].text}：\n<span className={item.states[1].valueClass}>{item.states[1].value}</span></div>\n                    </div>\n                    {tableContent(index, item.tableList)}\n                </div>\n                 \n         \t\t\t</div>\n             )\n           })}\n       </div>\n     )\n   }\n }\n}"
getData_control32_CyT8MD: "if(!elem){\n  return;\n}\n\nvar nodes = elem.querySelectorAll(\"#effective>.ablock\");\nvar data = {}, dataList = [];\n\nfor(var i=0; i<nodes.length; i++){\n  var title = nodes[i].querySelector(\".title_e span\").innerText;\n  var defaultText = nodes[i].querySelector(\".title_e .cr_blue01\").innerText;\n  \n// states\n  var nodeStateItem = nodes[i].querySelectorAll(\".title_e .states .item\");\n  var dataStates = [];\n  \n  for(var j=0; j<nodeStateItem.length; j++){\n    var nodeStateVal = nodeStateItem[j].querySelector(\"span\");\n    dataStates.push({\n      \"text\": nodeStateItem[j].innerText.split(\"：\")[0],\n      \"value\": nodeStateVal.innerText,\n      \"valueClass\": nodeStateVal.getAttribute(\"class\")\n    });\n  }\n  \n// table列表\n  var tableTrs = nodes[i].querySelectorAll(\".otable tr\");\n  var dataTable = [];\n  \n  for(var z=0; z<tableTrs.length; z++){\n    var tds = tableTrs[z].querySelectorAll(\"td\");\n    \n    for(var y=0; y<tds.length; y++){\n      var nodeSpanVal = tds[y].querySelector(\"span\");\n      if(z<3){\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"value\": nodeSpanVal.innerText,\n          \"valueClass\": nodeSpanVal.getAttribute(\"class\")?nodeSpanVal.getAttribute(\"class\"):\"\"\n        });\n      }else if(z==3 && y<2){\n        var nodeIpts = nodeSpanVal.querySelectorAll(\"input\");\n        var dataIptsVal = [];\n        for(var ipt=0; ipt<nodeIpts.length; ipt++){\n          dataIptsVal.push({\n            \"value\": nodeIpts[ipt].value,\n            \"className\": nodeIpts[ipt].getAttribute(\"class\")\n          });\n        }\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"btnValue\": dataIptsVal\n        });\n      }else if(z==3 && y==2){\n      \tvar nodeEditBarAs = tds[y].querySelectorAll(\".editBar a\");\n        var activeClass = tds[y].querySelector(\".editBar\").className;\n        var dataBtns = [];\n        \n        for(var as=0; as< nodeEditBarAs.length; as++){\n        \tdataBtns.push(nodeEditBarAs[as].innerText);\n        }\n        dataTable.push({\n          \"activeClass\": activeClass,\n          \"btnGroup\": dataBtns\n        });\n      }\n      \n    }\n  }\n  \n  dataList.push({\n    \"title\": title,\n    \"defaultText\": defaultText,\n    \"states\": dataStates,\n    \"tableList\": dataTable\n  });\n}\n\ndata = {\n  \"id\": elem.getAttribute(\"id\"),\n  \"display\": elem.style.display==\"\"||\"block\"?\"block\":\"none\",\n\t\"list\": dataList\n};\n\nreturn data;"
doAction_uiControl21_MXLiIk: "var type = data.eventType;\nvar customData = data.customData;\nconsole.log(customData);\nif(type == 'tablelistClick'){\n  var tdBtnDom = elem.querySelectorAll(\".otable\")[customData[0]].querySelectorAll(\"tr\")[3].querySelectorAll(\"td\");\n  if(customData[1] == 7){\n    \t\ttdBtnDom[0].querySelectorAll(\"input[type='button']\")[customData[2]].click();\n   \n  }else if(customData[1] == 8){\n    tdBtnDom[1].querySelectorAll(\"input[type='button']\")[customData[2]].click();\n  }else if(customData[1] == 9){\n    tdBtnDom[2].querySelectorAll(\"a\")[customData[2]].click();\n  }\n  \n}"
getTemplate_uiControl24_zda7Ed: "export default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  handlerTableList(_listIndex, _rowIndex, _index, e){\n    console.log(\"handlerTableList\");\n    var handler = this.props.customHandler;\n    var target = e.target;\n    if(handler){\n      handler({\n        eventType: 'tablelistClick',\n        customData: [_listIndex, _rowIndex, _index]\n      });\n    }\n  }\n render() {\n   var data = this.props.customData;\n   var me = this;\n   console.log(data);\n   if(!data){\n     return (\n       <div className=\"address-list\" style={{display:\"none\"}}></div>\n     )\n   }else{\n     var tableContent = function(listIndex, cdata){\n       return (\n        <div className=\"list\"> \n           <table cellpadding=\"0\" cellspacing=\"0\">\n              <tbody>\n                {cdata.map((item, index)=>{\n                  if(index<7){\n                    return (\n                      <tr className={index<4?\"main\":\"\"}>\n                        <td>{item.text}：<span className=\n{item.valueClass}>{item.value}</span></td>\n                      </tr>\n                  \t)\n                  }else if(index==7 || index==8){\n                    return (\n                      <tr className=\"listBtn\">\n                        <td>{item.text}\n                          <div className=\"listBtn-group\">\n{item.btnValue.map((btnItem, btnIndex)=>{\n                            return (\n                              <input type=\"button\" \nonClick={me.handlerTableList.bind(me, listIndex, index, btnIndex)}  value={btnItem.value} />\n                            )\n                          })}</div>\n                        </td>\n                      </tr>\n                    )\n                  }else if(index==9){\n                    return (\n                      <tr>\n                        <div className={item.activeClass}>\n                          {item.btnGroup.map((gItem, gIndex)=>{\n                            return (\n                              <a href=\"javascript:;\" onClick={me.handlerTableList.bind(me, listIndex, index, gIndex)}  className=\"btn-link\">{gItem}</a>\n                            )\n                          })}\n                        </div>\n                      </tr>\n                    )\n                  }\n                  \n                })}\n              </tbody>\n           </table>\n        </div>\n       )       \n       \n     };\n     \n     return (\n       <div className=\"address-list\" id={data.id} style=\n{{display:data.display}}>\n         \n           {data.list && data.list.map((item, index)=>{\n             return (\n               <div className=\"item-list\">\n                <div className=\"content\">\n                    <div className=\"title\">\n                      <span>{item.title}</span>\n                      <em>{item.defaultText}</em>\n                    </div>\n                    <div className=\"states\">\n                      <div className=\"item\">{item.states[0].text}：\n<span className={item.states[0].valueClass}>{item.states[0].value}</span></div>\n                      <div className=\"item\">{item.states[1].text}：\n<span className={item.states[1].valueClass}>{item.states[1].value}</span></div>\n                    </div>\n                    {tableContent(index, item.tableList)}\n                </div>\n                 \n         \t\t\t</div>\n             )\n           })}\n       </div>\n     )\n   }\n }\n}"
getData_control35_VKMkfT: "if(!elem){\n  return;\n}\n\nvar nodes = elem.querySelectorAll(\"#failure>.ablock\");\nvar data = {}, dataList = [];\n\nfor(var i=0; i<nodes.length; i++){\n  var title = nodes[i].querySelector(\".title_e span\").innerText;\n  var defaultText = nodes[i].querySelector(\".title_e .cr_blue01\").innerText;\n  \n// states\n  var nodeStateItem = nodes[i].querySelectorAll(\".title_e .states .item\");\n  var dataStates = [];\n  \n  for(var j=0; j<nodeStateItem.length; j++){\n    var nodeStateVal = nodeStateItem[j].querySelector(\"span\");\n    dataStates.push({\n      \"text\": nodeStateItem[j].innerText.split(\"：\")[0],\n      \"value\": nodeStateVal.innerText,\n      \"valueClass\": nodeStateVal.getAttribute(\"class\")\n    });\n  }\n  \n// table列表\n  var tableTrs = nodes[i].querySelectorAll(\".otable tr\");\n  var dataTable = [];\n  \n  for(var z=0; z<tableTrs.length; z++){\n    var tds = tableTrs[z].querySelectorAll(\"td\");\n    \n    for(var y=0; y<tds.length; y++){\n      var nodeSpanVal = tds[y].querySelector(\"span\");\n      if(z<3){\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"value\": nodeSpanVal.innerText,\n          \"valueClass\": nodeSpanVal.getAttribute(\"class\")?nodeSpanVal.getAttribute(\"class\"):\"\"\n        });\n      }else if(z==3 && y<2){\n        var nodeIpts = nodeSpanVal.querySelectorAll(\"input\");\n        var dataIptsVal = [];\n        for(var ipt=0; ipt<nodeIpts.length; ipt++){\n          dataIptsVal.push({\n            \"value\": nodeIpts[ipt].value,\n            \"className\": nodeIpts[ipt].getAttribute(\"class\")\n          });\n        }\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"btnValue\": dataIptsVal\n        });\n      }else if(z==3 && y==2){\n      \tvar nodeEditBarAs = tds[y].querySelectorAll(\".editBar a\");\n        var activeClass = tds[y].querySelector(\".editBar\").className;\n        var dataBtns = [];\n        \n        for(var as=0; as< nodeEditBarAs.length; as++){\n        \tdataBtns.push(nodeEditBarAs[as].innerText);\n        }\n        dataTable.push({\n          \"activeClass\": activeClass,\n          \"btnGroup\": dataBtns\n        });\n      }\n      \n    }\n  }\n  \n  dataList.push({\n    \"title\": title,\n    \"defaultText\": defaultText,\n    \"states\": dataStates,\n    \"tableList\": dataTable\n  });\n}\n\ndata = {\n  \"id\": elem.getAttribute(\"id\"),\n  \"display\": elem.style.display==\"\"||\"block\"?\"block\":\"none\",\n\t\"list\": dataList\n};\n\nreturn data;"
doAction_uiControl24_zda7Ed: "\nvar type = data.eventType;\nvar customData = data.customData;\nconsole.log(customData);\nif(type == 'tablelistClick'){\n  var tdBtnDom = elem.querySelectorAll(\".otable\")[customData[0]].querySelectorAll(\"tr\")[3].querySelectorAll(\"td\");\n  if(customData[1] == 7){\n    \t\ttdBtnDom[0].querySelectorAll(\"input[type='button']\")[customData[2]].click();\n   \n  }else if(customData[1] == 8){\n    tdBtnDom[1].querySelectorAll(\"input[type='button']\")[customData[2]].click();\n  }else if(customData[1] == 9){\n    tdBtnDom[2].querySelectorAll(\"a\")[customData[2]].click();\n  }\n  \n}"
getTemplate_uiControl33_wACsFF: "export default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  render() {\n    var data = this.props.customData;\n   \tvar me = this;\n    \n    return (\n      <div class=\"form-list\">\n        内容：\n        {data}\n      </div>\n    )\n  }\n}"
getData_control48_rLCkyV: |-
  if(!elem){
    return;
  }
  var data = [];
  console.log(elem);
  return data;
doAction_uiControl33_wACsFF: ''
getTemplate_uiControl33_BOzpdW: |-
  module.exports = React.createClass({
    render: function() {
      return (
        <div class="form-list">
          自定义组件用来适配基本组件无法适配的页面元素，您可以通过右键打开该自定义组件编辑器进行编辑
        </div>
      )
    }
  });
getData_control48_CutG2J: ''
doAction_uiControl33_BOzpdW: ''
getTemplate_uiControl33_kxdkBU: "import {Component,Fragment} from 'react'; \nimport {CustomHeader} from 'ysp-custom-components';\nexport default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  \n  //返回\n  back=()=>{ \n   let handler = this.props.customHandler;\n   if (handler) {\n    handler({\n    \teventType: 'back'\n    });\n   }\n  }\n  \n  tabTitles=(_id, e)=>{\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: _id\n      })\n    }\n  }\n  \n  handlerTableList(_id, _listIndex, _rowIndex, _index, e){\n    console.log(\"handlerTableList\");\n    var handler = this.props.customHandler;\n    var target = e.target;\n    if(handler){\n      handler({\n        eventType: 'addresslist',\n        customData: [_id, _listIndex, _rowIndex, _index]\n      });\n    }\n  }\n  \n  render() {\n    var data = this.props.customData;\n    var me = this;\n    var tabtitles = data.tabtitles;\n    var effectiveData = data.effective;\n    var failureData = data.failure;\n    \n    var getAddressListDom = function(_id, addressData){\n      var tableContent = function(_tid, listIndex, cdata){\n        return (\n          <div className=\"list\">\n             <table cellpadding=\"0\" cellspacing=\"0\">\n                <tbody>\n                  {cdata.map((item, index)=>{\n                    if(index<7){\n                      return (\n                        <tr className={index<4?\"main\":\"\"}>\n                          <td>{item.text}：<span className={item.valueClass}>{item.value}</span></td>\n                        </tr>\n                      )\n                    }else if(index==7 || index==8){\n                      return (\n                        <tr className=\"listBtn\">\n                          <td>{item.text}\n                            <div className=\"listBtn-group\">{item.btnValue.map((btnItem, btnIndex)=>{\n                              return (\n                                <input type=\"button\" value={btnItem.value} onClick={me.handlerTableList.bind(me, _tid, listIndex, index, btnIndex)} />\n                              )\n                            })}</div>\n                          </td>\n                        </tr>\n                      )\n                    }else if(index==9){\n                      return (\n                        <tr>\n                          <div className={item.activeClass}>\n                            {item.btnGroup.map((gItem, gIndex)=>{\n                              return (\n                                <a href=\"javascript:;\" className=\"btn-link\" onClick={me.handlerTableList.bind(me, _tid, listIndex, index, gIndex)} >{gItem}</a>\n                              )\n                            })}\n                          </div>\n                        </tr>\n                      )\n                    }\n                  })}\n                </tbody>\n             </table>\n          </div>\n        )\n      };\n      return (\n        <div className=\"address-list-item\" id={addressData.id} style={{display:addressData.display}}> \n           {addressData.list && addressData.list.map((item, index)=>{\n             return (\n               <div className=\"item-list\">\n                <div className=\"content\">\n                    <div className=\"title\">\n                      <span>{item.title}</span>\n                      <em>{item.defaultText}</em>\n                    </div>\n                    <div className=\"states\">\n                      <div className=\"item\">{item.states[0].text}：\n<span className={item.states[0].valueClass}>{item.states[0].value}</span></div>\n                      <div className=\"item\">{item.states[1].text}：\n<span className={item.states[1].valueClass}>{item.states[1].value}</span></div>\n                    </div>\n                    {tableContent(_id, index, item.tableList)}\n                </div>\n                 \n         \t\t\t</div>\n             )\n           })}\n       </div>\n      )\n    };\n    \n    return (\n      <Fragment>\n        <CustomHeader \n             data={{centerText:\"收货地址管理\"}} \n             backIsShow={true} \n             filterIsShow={false}\n             editIsShow={false}\n             back={me.back.bind(me)}\n          />\n        <div class=\"tab-title\">\n          <a href=\"javascript:;\" className={tabtitles[0].className} onClick={this.tabTitles.bind(this,'effective')}>{tabtitles[0].text}</a>\n          <a href=\"javascript:;\" className={tabtitles[1].className} onClick={this.tabTitles.bind(this,'failure')}>{tabtitles[1].text}</a>\n        </div>\n        <div class=\"address-list\">\n        \t{getAddressListDom(\"effective\", effectiveData)}\n        \t{getAddressListDom(\"failure\", failureData)}\n        </div>\n        <div className=\"addNewAddress\">\n        \t<a href=\"javascript:;\" className=\"btn-addNewAddress\" onClick={this.addNewAddress}><i className=\"icon-add\"></i>新增收货地址</a>\n          \n        </div>\n      </Fragment>\n    )\n  }\n}"
getData_control48_3m6yHn: "if(!elem){\n  return;\n}\n\nvar tabtitle = [];\nvar dom_tabTitle = elem.querySelectorAll(\".tab_lists a\");\n\n// tabtitle\nfor(var i=0; i<dom_tabTitle.length; i++){\n  var _cls = dom_tabTitle[i].getAttribute(\"class\")?\" \"+dom_tabTitle[i].getAttribute(\"class\"):\"\";\n  \n  tabtitle.push({\n    text: dom_tabTitle[i].innerText,\n    className: \"btn\"+_cls\n  });\n}\n\n// address-list\nvar getAddressList = function(_id){\n  var dataList = [];\n  var dom_id = elem.querySelector(\"#\"+_id);\n  var nodes = elem.querySelectorAll(\"#\"+_id+\">.ablock\");\n  \n  for(var i=0; i<nodes.length; i++){\n    var title = nodes[i].querySelector(\".title_e span\").innerText;\n    var defaultText = nodes[i].querySelector(\".title_e .cr_blue01\").innerText;\n  \n  \t// states\n    var nodeStateItem = nodes[i].querySelectorAll(\".title_e .states .item\");\n    var dataStates = [];\n\n    for(var j=0; j<nodeStateItem.length; j++){\n      var nodeStateVal = nodeStateItem[j].querySelector(\"span\");\n      dataStates.push({\n        \"text\": nodeStateItem[j].innerText.split(\"：\")[0],\n        \"value\": nodeStateVal.innerText,\n        \"valueClass\": nodeStateVal.getAttribute(\"class\")\n      });\n    }\n  \n    // table列表\n    var tableTrs = nodes[i].querySelectorAll(\".otable tr\");\n    var dataTable = [];\n\n    for(var z=0; z<tableTrs.length; z++){\n      var tds = tableTrs[z].querySelectorAll(\"td\");\n\n      for(var y=0; y<tds.length; y++){\n        var nodeSpanVal = tds[y].querySelector(\"span\");\n        if(z<3){\n          dataTable.push({\n            \"text\": tds[y].innerText.split(\"：\")[0],\n            \"value\": nodeSpanVal.innerText,\n            \"valueClass\": nodeSpanVal.getAttribute(\"class\")?nodeSpanVal.getAttribute(\"class\"):\"\"\n          });\n        }else if(z==3 && y<2){\n          var nodeIpts = nodeSpanVal.querySelectorAll(\"input\");\n          var dataIptsVal = [];\n          for(var ipt=0; ipt<nodeIpts.length; ipt++){\n            dataIptsVal.push({\n              \"value\": nodeIpts[ipt].value,\n              \"className\": nodeIpts[ipt].getAttribute(\"class\")\n            });\n          }\n          dataTable.push({\n            \"text\": tds[y].innerText.split(\"：\")[0],\n            \"btnValue\": dataIptsVal\n          });\n        }else if(z==3 && y==2){\n          var nodeEditBarAs = tds[y].querySelectorAll(\".editBar a\");\n          var activeClass = tds[y].querySelector(\".editBar\").className;\n          var dataBtns = [];\n\n          for(var as=0; as< nodeEditBarAs.length; as++){\n            dataBtns.push(nodeEditBarAs[as].innerText);\n          }\n          dataTable.push({\n            \"activeClass\": activeClass,\n            \"btnGroup\": dataBtns\n          });\n        }\n\n      }\n    }\n\n    dataList.push({\n      \"title\": title,\n      \"defaultText\": defaultText,\n      \"states\": dataStates,\n      \"tableList\": dataTable\n    });\n  }\n  return {\n    \"id\": _id,\n    \"display\": dom_id.style.display==\"none\"?\"none\":\"block\",\n    \"list\": dataList\n\t};\n}\n\nvar effective = getAddressList(\"effective\");\nvar failure = getAddressList(\"failure\");\n\n// address-list-form\nvar getAddressListForm = function(_dom){\n  var formItemDom = _dom.querySelectorAll(\".one\");\n  var itemDatas = [];\n  // var itemDatas = [{\n  //   text: formItemDom[0].querySelector(\"h5\").innerHTML,\n  // value: formItemDom[0].querySelector(\"input\").value,\n  //   tip: formItemDom[0].querySelector(\"div\").innerHTML,\n  //   disabled: formItemDom[0].querySelector(\"input\").getAttribute(\"disabled\")\n  // }, {\n  //   text: formItemDom[1].querySelector(\"h5\").innerHTML,\n  // value: formItemDom[1].querySelector(\"input\").value,\n  //   tip: formItemDom[1].querySelector(\"div\").innerHTML,\n  //   disabled: formItemDom[1].querySelector(\"input\").getAttribute(\"disabled\")\n  // }];\n  \n  return itemDatas;\n}\nvar newAddressListFormDom = elem.querySelector(\"#addressList>.newAddress_lists\");\n\n\nvar data = {\n  \"tabtitles\": tabtitle,\n  \"effective\": effective,\n  \"failure\": failure\n};\n\nreturn data;"
doAction_uiControl33_kxdkBU: "var type = data.eventType;\n\nif(data.eventType == \"back\"){\n  console.log(\"back\");\n   ysp.appMain.back();\n}else if(type == 'effective'){\n\tconsole.log(\"effective\");\n\tvar tabItems = elem.querySelectorAll(\".tab_lists a\");\n  tabItems[0].click();\n}else if(type == 'failure'){\n\tconsole.log(\"failure\");\n\tvar tabItems = elem.querySelectorAll(\".tab_lists a\");\n  tabItems[1].click();\n}else if(type == 'addresslist'){\n  var customData = data.customData;\n  var tdBtnDom = elem.querySelectorAll(\"#\"+customData[0]+\" .otable\")[customData[1]].querySelectorAll(\"tr\")[3].querySelectorAll(\"td\");\n  if(customData[2] == 7){\n    tdBtnDom[0].querySelectorAll(\"input[type='button']\")[customData[3]].click();\n  }else if(customData[2] == 8){\n    tdBtnDom[1].querySelectorAll(\"input[type='button']\")[customData[3]].click();\n  }else if(customData[2] == 9){\n    tdBtnDom[2].querySelectorAll(\"a\")[customData[3]].click();\n  }\n  \n}"
