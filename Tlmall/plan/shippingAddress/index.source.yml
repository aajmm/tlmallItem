getTemplate_uiControl16_ohrCBC: "import { Header, HeaderLeft } from 'ysp-interior-components';\nimport { back } from 'appRenderer';\nexport default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  goBack=()=>{\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"goBack\"\n      })\n    }\n  }\n  render() {\n    return (\n      <div className='main-title'>\n        <Header title=\"收货地址管理\">\n          <HeaderLeft>\n            <i className='icon-goback'  onClick={back}></i>\n          </HeaderLeft>\n\t\t\t\t</Header>\n      </div>\n    )\n  }\n};"
getData_control16_QdoZw3: ''
doAction_uiControl16_ohrCBC: |-
  if (data.eventType == 'goBack') {
    // console.log(111);
    ysp.appMain.back();
  }
getTemplate_uiControl20_cgL9fW: |-
  export default class extends React.Component{
    constructor(props){
      super(props);
    }
    tabTitle=(type, e)=>{
      var handler = this.props.customHandler;
      if(handler){
        handler({
          eventType: type
        })
      }
    }
    
    render() {
      var data = this.props.customData;
      
      return (
        <div class="tab-title">
          <a href="javascript:;" className={data[0].className} onClick={this.tabTitle.bind(this,'effective')}>{data[0].text}</a>
          <a href="javascript:;" className={data[1].className} onClick={this.tabTitle.bind(this,'failure')}>{data[1].text}</a>
        </div>
      )
    }
  }
getData_control19_C1K69x: |-
  if(!elem){
    return;
  }

  var nodes = elem.querySelectorAll("a");
  var data = [];

  for(var i=0; i<nodes.length; i++){
    data.push({
      text: nodes[i].innerText,
      className: "btn "+nodes[i].getAttribute("class")
    });
  }

  return data;
doAction_uiControl20_cgL9fW: "var type = data.eventType;\nvar tabItems = elem.querySelectorAll(\".tab_lists a\");\n\nif(type == 'effective'){\n\tconsole.log(\"effective\");\n  tabItems[0].click();\n}else if(type == 'failure'){\n\tconsole.log(\"failure\");\n  tabItems[1].click();\n}"
getTemplate_uiControl15_ETKNLR: "export default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  \n render() {\n   var data = this.props.customData;\n   console.log(data);\n   if(!data){\n     return (\n       <div className=\"address-list\"></div>\n     )\n   }else{\n     var tableContent = function(cdata){\n       return (\n        <div className=\"list\">\n           <table cellpadding=\"0\" cellspacing=\"0\">\n              <tbody>\n                {cdata.map((item, index)=>{\n                  if(index<7){\n                    return (\n                      <tr className={index<4?\"main\":\"\"}>\n                        <td>{item.text}：<span className={item.valueClass}>{item.value}</span></td>\n                      </tr>\n                  \t)\n                  }else if(index==7 || index==8){\n                    return (\n                      <tr className=\"listBtn\">\n                        <td>{item.text}\n                          <div className=\"listBtn-group\">{item.btnValue.map((btnItem, btnIndex)=>{\n                            return (\n                              <input type=\"button\" onClick=\"handlerTableList({btnIndex})\" value={btnItem.value} />\n                            )\n                          })}</div>\n                        </td>\n                      </tr>\n                    )\n                  }else if(index==9){\n                    return (\n                      <tr>\n                        <div className=\"btm-btnGroup\">\n                          {item.btnGroup.map((gItem, gIndex)=>{\n                            return (\n                              <a href=\"javascript:;\" onClick=\"handlerBtnGroup({gIndex})\" className=\"btn-link\">{gItem}</a>\n                            )\n                          })}\n                        </div>\n                      </tr>\n                    )\n                  }\n                  \n                })}\n              </tbody>\n           </table>\n        </div>\n       )       \n       \n     };\n     \n     return (\n       <div className=\"address-list\" id={data.id} style={{display:data.display}}>\n         \n           {data.list && data.list.map((item, index)=>{\n             return (\n               <div className=\"item-list\">\n                <div className=\"content\">\n                    <div className=\"title\">\n                      <span>{item.title}</span>\n                      <em>{item.defaultText}</em>\n                    </div>\n                    <div className=\"states\">\n                      <div className=\"item\">{item.states[0].text}：<span className={item.states[0].valueClass}>{item.states[0].value}</span></div>\n                      <div className=\"item\">{item.states[1].text}：<span className={item.states[1].valueClass}>{item.states[1].value}</span></div>\n                    </div>\n                    {tableContent(item.tableList)}\n                </div>\n                 \n         \t\t\t</div>\n             )\n           })}\n       </div>\n     )\n   }\n }\n}"
getData_control17_q2rqfw: "if(!elem){\n  return;\n}\n\nvar nodes = elem.querySelectorAll(\".ablock\");\nvar data = {}, dataList = [];\n\nfor(var i=0; i<nodes.length; i++){\n  var title = nodes[i].querySelector(\".title_e span\").innerText;\n  var defaultText = nodes[i].querySelector(\".title_e .cr_blue01\").innerText;\n  \n// states\n  var nodeStateItem = nodes[i].querySelectorAll(\".title_e .states .item\");\n  var dataStates = [];\n  \n  for(var j=0; j<nodeStateItem.length; j++){\n    var nodeStateVal = nodeStateItem[j].querySelector(\"span\");\n    dataStates.push({\n      \"text\": nodeStateItem[j].innerText.split(\"：\")[0],\n      \"value\": nodeStateVal.innerText,\n      \"valueClass\": nodeStateVal.getAttribute(\"class\")\n    });\n  }\n  \n// table列表\n  var tableTrs = nodes[i].querySelectorAll(\".otable tr\");\n  var dataTable = [];\n  \n  for(var z=0; z<tableTrs.length; z++){\n    var tds = tableTrs[z].querySelectorAll(\"td\");\n    \n    for(var y=0; y<tds.length; y++){\n      var nodeSpanVal = tds[y].querySelector(\"span\");\n      if(z<3){\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"value\": nodeSpanVal.innerText,\n          \"valueClass\": nodeSpanVal.getAttribute(\"class\")?nodeSpanVal.getAttribute(\"class\"):\"\"\n        });\n      }else if(z==3 && y<2){\n        var nodeIpts = nodeSpanVal.querySelectorAll(\"input\");\n        var dataIptsVal = [];\n        for(var ipt=0; ipt<nodeIpts.length; ipt++){\n          dataIptsVal.push({\n            \"value\": nodeIpts[ipt].value,\n            \"className\": nodeIpts[ipt].getAttribute(\"class\")\n          });\n        }\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"btnValue\": dataIptsVal\n        });\n      }else if(z==3 && y==2){\n      \tvar nodeEditBarAs = tds[y].querySelectorAll(\".editBar a\");\n        var dataBtns = [];\n        \n        for(var as=0; as< nodeEditBarAs.length; as++){\n        \tdataBtns.push(nodeEditBarAs[as].innerText);\n        }\n        dataTable.push({\n          \"btnGroup\": dataBtns\n        });\n      }\n      \n    }\n  }\n  \n  dataList.push({\n    \"title\": title,\n    \"defaultText\": defaultText,\n    \"states\": dataStates,\n    \"tableList\": dataTable\n  });\n}\n\ndata = {\n  \"id\": elem.getAttribute(\"id\"),\n  \"display\": elem.style.display==\"\"||\"block\"?\"block\":\"none\",\n\t\"list\": dataList\n};\n\nreturn data;"
doAction_uiControl15_ETKNLR: ''
getTemplate_uiControl21_MXLiIk: "export default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  handlerBtnGroup(_index, e){\n    var handler = this.props.customHandler;\n    console.log(\"handlerBtnGroup\");\n    console.log(_index);\n  }\n  handlerTableList(_index, e){\n    var handler = this.props.customHandler;\n    console.log(\"handlerTableList\");\n    console.log(_index);\n  }\n render() {\n   var data = this.props.customData;\n   console.log(data);\n   if(!data){\n     return (\n       <div className=\"address-list\" style={{display:\"none\"}}></div>\n     )\n   }else{\n     var tableContent = function(cdata){\n       return (\n        <div className=\"list\">\n           <table cellpadding=\"0\" cellspacing=\"0\">\n              <tbody>\n                {cdata.map((item, index)=>{\n                  if(index<7){\n                    return (\n                      <tr className={index<4?\"main\":\"\"}>\n                        <td>{item.text}：<span className=\n{item.valueClass}>{item.value}</span></td>\n                      </tr>\n                  \t)\n                  }else if(index==7 || index==8){\n                    return (\n                      <tr className=\"listBtn\">\n                        <td>{item.text}\n                          <div className=\"listBtn-group\">\n{item.btnValue.map((btnItem, btnIndex)=>{\n                            return (\n                              <input type=\"button\" \nonClick={this.handlerTableList.bind(this,btnIndex)} value=\n{btnItem.value} />\n                            )\n                          })}</div>\n                        </td>\n                      </tr>\n                    )\n                  }else if(index==9){\n                    return (\n                      <tr>\n                        <div className={item.activeClass}>\n                          {item.btnGroup.map((gItem, gIndex)=>{\n                            return (\n                              <a href=\"javascript:;\" \n\nonClick={this.handlerBtnGroup.bind(this,gIndex)} className=\"btn-link\">{gItem}</a>\n                            )\n                          })}\n                        </div>\n                      </tr>\n                    )\n                  }\n                  \n                })}\n              </tbody>\n           </table>\n        </div>\n       )       \n       \n     };\n     \n     return (\n       <div className=\"address-list\" id={data.id} style=\n{{display:data.display}}>\n         \n           {data.list && data.list.map((item, index)=>{\n             return (\n               <div className=\"item-list\">\n                <div className=\"content\">\n                    <div className=\"title\">\n                      <span>{item.title}</span>\n                      <em>{item.defaultText}</em>\n                    </div>\n                    <div className=\"states\">\n                      <div className=\"item\">{item.states[0].text}：\n<span className={item.states[0].valueClass}>{item.states\n[0].value}</span></div>\n                      <div className=\"item\">{item.states[1].text}：\n<span className={item.states[1].valueClass}>{item.states\n[1].value}</span></div>\n                    </div>\n                    {tableContent(item.tableList)}\n                </div>\n                 \n         \t\t\t</div>\n             )\n           })}\n       </div>\n     )\n   }\n }\n}"
getData_control32_CyT8MD: "if(!elem){\n  return;\n}\n\nvar nodes = elem.querySelectorAll(\".ablock\");\nvar data = {}, dataList = [];\n\nfor(var i=0; i<nodes.length; i++){\n  var title = nodes[i].querySelector(\".title_e span\").innerText;\n  var defaultText = nodes[i].querySelector(\".title_e .cr_blue01\").innerText;\n  \n// states\n  var nodeStateItem = nodes[i].querySelectorAll(\".title_e .states .item\");\n  var dataStates = [];\n  \n  for(var j=0; j<nodeStateItem.length; j++){\n    var nodeStateVal = nodeStateItem[j].querySelector(\"span\");\n    dataStates.push({\n      \"text\": nodeStateItem[j].innerText.split(\"：\")[0],\n      \"value\": nodeStateVal.innerText,\n      \"valueClass\": nodeStateVal.getAttribute(\"class\")\n    });\n  }\n  \n// table列表\n  var tableTrs = nodes[i].querySelectorAll(\".otable tr\");\n  var dataTable = [];\n  \n  for(var z=0; z<tableTrs.length; z++){\n    var tds = tableTrs[z].querySelectorAll(\"td\");\n    \n    for(var y=0; y<tds.length; y++){\n      var nodeSpanVal = tds[y].querySelector(\"span\");\n      if(z<3){\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"value\": nodeSpanVal.innerText,\n          \"valueClass\": nodeSpanVal.getAttribute(\"class\")?nodeSpanVal.getAttribute(\"class\"):\"\"\n        });\n      }else if(z==3 && y<2){\n        var nodeIpts = nodeSpanVal.querySelectorAll(\"input\");\n        var dataIptsVal = [];\n        for(var ipt=0; ipt<nodeIpts.length; ipt++){\n          dataIptsVal.push({\n            \"value\": nodeIpts[ipt].value,\n            \"className\": nodeIpts[ipt].getAttribute(\"class\")\n          });\n        }\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"btnValue\": dataIptsVal\n        });\n      }else if(z==3 && y==2){\n      \tvar nodeEditBarAs = tds[y].querySelectorAll(\".editBar a\");\n        var activeClass = tds[y].querySelector(\".editBar\").className;\n        var dataBtns = [];\n        \n        for(var as=0; as< nodeEditBarAs.length; as++){\n        \tdataBtns.push(nodeEditBarAs[as].innerText);\n        }\n        dataTable.push({\n          \"activeClass\": activeClass,\n          \"btnGroup\": dataBtns\n        });\n      }\n      \n    }\n  }\n  \n  dataList.push({\n    \"title\": title,\n    \"defaultText\": defaultText,\n    \"states\": dataStates,\n    \"tableList\": dataTable\n  });\n}\n\ndata = {\n  \"id\": elem.getAttribute(\"id\"),\n  \"display\": elem.style.display==\"\"||\"block\"?\"block\":\"none\",\n\t\"list\": dataList\n};\n\nreturn data;"
doAction_uiControl21_MXLiIk: ''
getTemplate_uiControl24_zda7Ed: "export default class extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  \n render() {\n   var data = this.props.customData;\n   console.log(data);\n   if(!data){\n     return (\n       <div className=\"address-list\" style={{display:\"none\"}}></div>\n     )\n   }else{\n     var tableContent = function(cdata){\n       return (\n        <div className=\"list\">\n           <table cellpadding=\"0\" cellspacing=\"0\">\n              <tbody>\n                {cdata.map((item, index)=>{\n                  if(index<7){\n                    return (\n                      <tr className={index<4?\"main\":\"\"}>\n                        <td>{item.text}：<span className={item.valueClass}>{item.value}</span></td>\n                      </tr>\n                  \t)\n                  }else if(index==7 || index==8){\n                    return (\n                      <tr className=\"listBtn\">\n                        <td>{item.text}\n                          <div className=\"listBtn-group\">{item.btnValue.map((btnItem, btnIndex)=>{\n                            return (\n                              <input type=\"button\" onClick=\"handlerTableList({btnIndex})\" value={btnItem.value} />\n                            )\n                          })}</div>\n                        </td>\n                      </tr>\n                    )\n                  }else if(index==9){\n                    return (\n                      <tr>\n                        <div className={item.activeClass}>\n                          {item.btnGroup.map((gItem, gIndex)=>{\n                            return (\n                              <a href=\"javascript:;\" onClick=\"handlerBtnGroup({gIndex})\" className=\"btn-link\">{gItem}</a>\n                            )\n                          })}\n                        </div>\n                      </tr>\n                    )\n                  }\n                  \n                })}\n              </tbody>\n           </table>\n        </div>\n       )       \n       \n     };\n     \n     return (\n       <div className=\"address-list\" id={data.id} style={{display:data.display}}>\n         \n           {data.list && data.list.map((item, index)=>{\n             return (\n               <div className=\"item-list\">\n                <div className=\"content\">\n                    <div className=\"title\">\n                      <span>{item.title}</span>\n                      <em>{item.defaultText}</em>\n                    </div>\n                    <div className=\"states\">\n                      <div className=\"item\">{item.states[0].text}：<span className={item.states[0].valueClass}>{item.states[0].value}</span></div>\n                      <div className=\"item\">{item.states[1].text}：<span className={item.states[1].valueClass}>{item.states[1].value}</span></div>\n                    </div>\n                    {tableContent(item.tableList)}\n                </div>\n                 \n         \t\t\t</div>\n             )\n           })}\n       </div>\n     )\n   }\n }\n}"
getData_control35_VKMkfT: "if(!elem){\n  return;\n}\n\nvar nodes = elem.querySelectorAll(\".ablock\");\nvar data = {}, dataList = [];\n\nfor(var i=0; i<nodes.length; i++){\n  var title = nodes[i].querySelector(\".title_e span\").innerText;\n  var defaultText = nodes[i].querySelector(\".title_e .cr_blue01\").innerText;\n  \n// states\n  var nodeStateItem = nodes[i].querySelectorAll(\".title_e .states .item\");\n  var dataStates = [];\n  \n  for(var j=0; j<nodeStateItem.length; j++){\n    var nodeStateVal = nodeStateItem[j].querySelector(\"span\");\n    dataStates.push({\n      \"text\": nodeStateItem[j].innerText.split(\"：\")[0],\n      \"value\": nodeStateVal.innerText,\n      \"valueClass\": nodeStateVal.getAttribute(\"class\")\n    });\n  }\n  \n// table列表\n  var tableTrs = nodes[i].querySelectorAll(\".otable tr\");\n  var dataTable = [];\n  \n  for(var z=0; z<tableTrs.length; z++){\n    var tds = tableTrs[z].querySelectorAll(\"td\");\n    \n    for(var y=0; y<tds.length; y++){\n      var nodeSpanVal = tds[y].querySelector(\"span\");\n      if(z<3){\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"value\": nodeSpanVal.innerText,\n          \"valueClass\": nodeSpanVal.getAttribute(\"class\")?nodeSpanVal.getAttribute(\"class\"):\"\"\n        });\n      }else if(z==3 && y<2){\n        var nodeIpts = nodeSpanVal.querySelectorAll(\"input\");\n        var dataIptsVal = [];\n        for(var ipt=0; ipt<nodeIpts.length; ipt++){\n          dataIptsVal.push({\n            \"value\": nodeIpts[ipt].value,\n            \"className\": nodeIpts[ipt].getAttribute(\"class\")\n          });\n        }\n        dataTable.push({\n          \"text\": tds[y].innerText.split(\"：\")[0],\n          \"btnValue\": dataIptsVal\n        });\n      }else if(z==3 && y==2){\n      \tvar nodeEditBarAs = tds[y].querySelectorAll(\".editBar a\");\n        var activeClass = tds[y].querySelector(\".editBar\").className;\n        var dataBtns = [];\n        \n        for(var as=0; as< nodeEditBarAs.length; as++){\n        \tdataBtns.push(nodeEditBarAs[as].innerText);\n        }\n        dataTable.push({\n          \"activeClass\": activeClass,\n          \"btnGroup\": dataBtns\n        });\n      }\n      \n    }\n  }\n  \n  dataList.push({\n    \"title\": title,\n    \"defaultText\": defaultText,\n    \"states\": dataStates,\n    \"tableList\": dataTable\n  });\n}\n\ndata = {\n  \"id\": elem.getAttribute(\"id\"),\n  \"display\": elem.style.display==\"\"||\"block\"?\"block\":\"none\",\n\t\"list\": dataList\n};\n\nreturn data;"
doAction_uiControl24_zda7Ed: ''
